<%# empty line %>
# AUTOGENERATED BY BOLT
# DO NOT MODIFY
$script:mapping = @{
<% @mapped_options.each do |k,v| -%>
"<%= k -%>" = "<%= v -%>"
<% end -%>
}

<% @commands.each do |pwsh_command| %>
<#
.SYNOPSIS
  <%= pwsh_command[:syntax] %>
.DESCRIPTION
  <%= pwsh_command[:description] %>
<% pwsh_command[:options].each do |option| -%>
.PARAMETER <%= option[:name] %>
  <%= option[:help_msg] %>
<% end -%>
.PARAMETER version
  Get the version of the bolt installation
.LINK
  https://puppet.com/products/bolt
.LINK
  https://puppet.com/docs/bolt/latest/bolt_command_reference.html
#>
function <%= pwsh_command[:cmdlet] %>
{
  [CmdletBinding()]
  param (
<% pwsh_command[:options].each do |option| -%>
    [Parameter(<% if option[:mandatory] -%>Mandatory=$<%= option[:mandatory] -%><% end -%><% if option[:position] -%>, Position=<%= option[:position] -%><% end -%><% if option[:parameter_set] -%>, ParameterSetName='<%= option[:parameter_set] -%>'<% end -%>)]
<% if option[:validate_not_null_or_empty] -%>
    [ValidateNotNullOrEmpty()]
<% end -%>
<% if option[:validate_set] -%>
    [ValidateSet(<%= option[:validate_set].map(&:inspect).join(', ') %>)]
<% end -%>
<% if option[:ruby_short] -%>
    [Alias('<%= option[:ruby_short].gsub("-","") %>')]
<% end -%>
<% if option[:type] -%>
    [<%= option[:type] -%>]
<% end -%>
    $<%= option[:name] -%>,

<% end -%>
    [Parameter()]
    [switch]$Version
  )

  if($version){
    return (Get-Content -Path $script:BOLT_BASEDIR\misc\versions.txt)[0].split(" ")[1]
  }

  $params = @('<%= pwsh_command[:ruby_command] -%>'<% if pwsh_command[:ruby_action] -%>, '<%= pwsh_command[:ruby_action] -%>'<% end -%>)

  $params = $params + (Get-BoltCommandline -parameterHash $PSBoundParameters -mapping $mapping)

  $result = Invoke-BoltCommandline $params

  Write-Output $result

}
<% end %>
