<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="1110" errors="0" failures="2" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2021-02-19" time="10:00:30">
  <environment platform="Linux" machine-name="AREA88" clr-version="Unknown" user="mcdonaldseanp" cwd="/home/mcdonaldseanp/Workspace/orchestration/bolt" os-version="5.4.72-microsoft-standard-WSL2" user-domain="" nunit-version="2.5.8.0" />
  <culture-info current-culture="" current-uiculture="" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="33.1517" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="/home/mcdonaldseanp/Workspace/orchestration/bolt/pwsh_module/autogenerated.tests.ps1" executed="True" result="Success" success="True" time="31.3329" asserts="0" description="/home/mcdonaldseanp/Workspace/orchestration/bolt/pwsh_module/autogenerated.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Invoke-BoltCommand" executed="True" result="Success" success="True" time="2.1269" asserts="0" description="Invoke-BoltCommand">
            <results>
              <test-suite type="TestFixture" name="Invoke-BoltCommand.parameters" executed="True" result="Success" success="True" time="0.3106" asserts="0" description="Invoke-BoltCommand.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltCommand.parameters.has a primary parameter" executed="True" result="Success" success="True" time="0.0318" asserts="0" description="has a primary parameter">
                    <results>
                      <test-case description="has a primary parameter" name="Invoke-BoltCommand.parameters.has a primary parameter(Invoke-BoltCommand)" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltCommand.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.237" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Invoke-BoltCommand.parameters.has correct parameters(Invoke-BoltCommand)" time="0.237" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-BoltCommand.help" executed="True" result="Success" success="True" time="2.1011" asserts="0" description="Invoke-BoltCommand.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltCommand.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0296" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Invoke-BoltCommand.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Invoke-BoltCommand}}; details=@{description=System.Management.Automation.PSObject[]; name=Invoke-BoltCommand}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Invoke-BoltCommand; Category=Function; Synopsis=bolt command run &lt;command&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0296" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltCommand.help.gets description" executed="True" result="Success" success="True" time="0.0201" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Invoke-BoltCommand.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Invoke-BoltCommand}}; details=@{description=System.Management.Automation.PSObject[]; name=Invoke-BoltCommand}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Invoke-BoltCommand; Category=Function; Synopsis=bolt command run &lt;command&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0201" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltCommand.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0233" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Invoke-BoltCommand.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Invoke-BoltCommand}}; details=@{description=System.Management.Automation.PSObject[]; name=Invoke-BoltCommand}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Invoke-BoltCommand; Category=Function; Synopsis=bolt command run &lt;command&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0233" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltCommand.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.5349" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: Cleanup" name="Invoke-BoltCommand.help.gets help for parameter: Cleanup" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: ClearCache" name="Invoke-BoltCommand.help.gets help for parameter: ClearCache" time="0.0306" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Color" name="Invoke-BoltCommand.help.gets help for parameter: Color" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Command" name="Invoke-BoltCommand.help.gets help for parameter: Command" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Concurrency" name="Invoke-BoltCommand.help.gets help for parameter: Concurrency" time="0.0191" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: ConnectTimeout" name="Invoke-BoltCommand.help.gets help for parameter: ConnectTimeout" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: CopyCommand" name="Invoke-BoltCommand.help.gets help for parameter: CopyCommand" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: EnvVar" name="Invoke-BoltCommand.help.gets help for parameter: EnvVar" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Format" name="Invoke-BoltCommand.help.gets help for parameter: Format" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: HostKeyCheck" name="Invoke-BoltCommand.help.gets help for parameter: HostKeyCheck" time="0.0235" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Inventoryfile" name="Invoke-BoltCommand.help.gets help for parameter: Inventoryfile" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Invoke-BoltCommand.help.gets help for parameter: LogLevel" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Modulepath" name="Invoke-BoltCommand.help.gets help for parameter: Modulepath" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: NativeSsh" name="Invoke-BoltCommand.help.gets help for parameter: NativeSsh" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Password" name="Invoke-BoltCommand.help.gets help for parameter: Password" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: PasswordPrompt" name="Invoke-BoltCommand.help.gets help for parameter: PasswordPrompt" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: PrivateKey" name="Invoke-BoltCommand.help.gets help for parameter: PrivateKey" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Invoke-BoltCommand.help.gets help for parameter: Project" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Query" name="Invoke-BoltCommand.help.gets help for parameter: Query" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Rerun" name="Invoke-BoltCommand.help.gets help for parameter: Rerun" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: RunAs" name="Invoke-BoltCommand.help.gets help for parameter: RunAs" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SaveRerun" name="Invoke-BoltCommand.help.gets help for parameter: SaveRerun" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SshCommand" name="Invoke-BoltCommand.help.gets help for parameter: SshCommand" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Ssl" name="Invoke-BoltCommand.help.gets help for parameter: Ssl" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SslVerify" name="Invoke-BoltCommand.help.gets help for parameter: SslVerify" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoExecutable" name="Invoke-BoltCommand.help.gets help for parameter: SudoExecutable" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoPassword" name="Invoke-BoltCommand.help.gets help for parameter: SudoPassword" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoPasswordPrompt" name="Invoke-BoltCommand.help.gets help for parameter: SudoPasswordPrompt" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Targets" name="Invoke-BoltCommand.help.gets help for parameter: Targets" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Trace" name="Invoke-BoltCommand.help.gets help for parameter: Trace" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Transport" name="Invoke-BoltCommand.help.gets help for parameter: Transport" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: TTY" name="Invoke-BoltCommand.help.gets help for parameter: TTY" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: User" name="Invoke-BoltCommand.help.gets help for parameter: User" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltCommand.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.5653" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for Cleanup has correct Mandatory value" name="Invoke-BoltCommand.help.help for Cleanup has correct Mandatory value" time="0.0196" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for ClearCache has correct Mandatory value" name="Invoke-BoltCommand.help.help for ClearCache has correct Mandatory value" time="0.0201" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Color has correct Mandatory value" name="Invoke-BoltCommand.help.help for Color has correct Mandatory value" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Command has correct Mandatory value" name="Invoke-BoltCommand.help.help for Command has correct Mandatory value" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Concurrency has correct Mandatory value" name="Invoke-BoltCommand.help.help for Concurrency has correct Mandatory value" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for ConnectTimeout has correct Mandatory value" name="Invoke-BoltCommand.help.help for ConnectTimeout has correct Mandatory value" time="0.019" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for CopyCommand has correct Mandatory value" name="Invoke-BoltCommand.help.help for CopyCommand has correct Mandatory value" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for EnvVar has correct Mandatory value" name="Invoke-BoltCommand.help.help for EnvVar has correct Mandatory value" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Format has correct Mandatory value" name="Invoke-BoltCommand.help.help for Format has correct Mandatory value" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for HostKeyCheck has correct Mandatory value" name="Invoke-BoltCommand.help.help for HostKeyCheck has correct Mandatory value" time="0.0216" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Inventoryfile has correct Mandatory value" name="Invoke-BoltCommand.help.help for Inventoryfile has correct Mandatory value" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Invoke-BoltCommand.help.help for LogLevel has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Modulepath has correct Mandatory value" name="Invoke-BoltCommand.help.help for Modulepath has correct Mandatory value" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for NativeSsh has correct Mandatory value" name="Invoke-BoltCommand.help.help for NativeSsh has correct Mandatory value" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Password has correct Mandatory value" name="Invoke-BoltCommand.help.help for Password has correct Mandatory value" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for PasswordPrompt has correct Mandatory value" name="Invoke-BoltCommand.help.help for PasswordPrompt has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for PrivateKey has correct Mandatory value" name="Invoke-BoltCommand.help.help for PrivateKey has correct Mandatory value" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Invoke-BoltCommand.help.help for Project has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Query has correct Mandatory value" name="Invoke-BoltCommand.help.help for Query has correct Mandatory value" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Rerun has correct Mandatory value" name="Invoke-BoltCommand.help.help for Rerun has correct Mandatory value" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for RunAs has correct Mandatory value" name="Invoke-BoltCommand.help.help for RunAs has correct Mandatory value" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SaveRerun has correct Mandatory value" name="Invoke-BoltCommand.help.help for SaveRerun has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SshCommand has correct Mandatory value" name="Invoke-BoltCommand.help.help for SshCommand has correct Mandatory value" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Ssl has correct Mandatory value" name="Invoke-BoltCommand.help.help for Ssl has correct Mandatory value" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SslVerify has correct Mandatory value" name="Invoke-BoltCommand.help.help for SslVerify has correct Mandatory value" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoExecutable has correct Mandatory value" name="Invoke-BoltCommand.help.help for SudoExecutable has correct Mandatory value" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoPassword has correct Mandatory value" name="Invoke-BoltCommand.help.help for SudoPassword has correct Mandatory value" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoPasswordPrompt has correct Mandatory value" name="Invoke-BoltCommand.help.help for SudoPasswordPrompt has correct Mandatory value" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Targets has correct Mandatory value" name="Invoke-BoltCommand.help.help for Targets has correct Mandatory value" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Trace has correct Mandatory value" name="Invoke-BoltCommand.help.help for Trace has correct Mandatory value" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Transport has correct Mandatory value" name="Invoke-BoltCommand.help.help for Transport has correct Mandatory value" time="0.0189" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for TTY has correct Mandatory value" name="Invoke-BoltCommand.help.help for TTY has correct Mandatory value" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for User has correct Mandatory value" name="Invoke-BoltCommand.help.help for User has correct Mandatory value" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltCommand.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.5609" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for Cleanup" name="Invoke-BoltCommand.help.help has correct parameter type for Cleanup" time="0.0211" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for ClearCache" name="Invoke-BoltCommand.help.help has correct parameter type for ClearCache" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Color" name="Invoke-BoltCommand.help.help has correct parameter type for Color" time="0.0196" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Command" name="Invoke-BoltCommand.help.help has correct parameter type for Command" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Concurrency" name="Invoke-BoltCommand.help.help has correct parameter type for Concurrency" time="0.0191" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for ConnectTimeout" name="Invoke-BoltCommand.help.help has correct parameter type for ConnectTimeout" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for CopyCommand" name="Invoke-BoltCommand.help.help has correct parameter type for CopyCommand" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for EnvVar" name="Invoke-BoltCommand.help.help has correct parameter type for EnvVar" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Format" name="Invoke-BoltCommand.help.help has correct parameter type for Format" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for HostKeyCheck" name="Invoke-BoltCommand.help.help has correct parameter type for HostKeyCheck" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Inventoryfile" name="Invoke-BoltCommand.help.help has correct parameter type for Inventoryfile" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Invoke-BoltCommand.help.help has correct parameter type for LogLevel" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Modulepath" name="Invoke-BoltCommand.help.help has correct parameter type for Modulepath" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for NativeSsh" name="Invoke-BoltCommand.help.help has correct parameter type for NativeSsh" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Password" name="Invoke-BoltCommand.help.help has correct parameter type for Password" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for PasswordPrompt" name="Invoke-BoltCommand.help.help has correct parameter type for PasswordPrompt" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for PrivateKey" name="Invoke-BoltCommand.help.help has correct parameter type for PrivateKey" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Invoke-BoltCommand.help.help has correct parameter type for Project" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Query" name="Invoke-BoltCommand.help.help has correct parameter type for Query" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Rerun" name="Invoke-BoltCommand.help.help has correct parameter type for Rerun" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for RunAs" name="Invoke-BoltCommand.help.help has correct parameter type for RunAs" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SaveRerun" name="Invoke-BoltCommand.help.help has correct parameter type for SaveRerun" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SshCommand" name="Invoke-BoltCommand.help.help has correct parameter type for SshCommand" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Ssl" name="Invoke-BoltCommand.help.help has correct parameter type for Ssl" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SslVerify" name="Invoke-BoltCommand.help.help has correct parameter type for SslVerify" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoExecutable" name="Invoke-BoltCommand.help.help has correct parameter type for SudoExecutable" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoPassword" name="Invoke-BoltCommand.help.help has correct parameter type for SudoPassword" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoPasswordPrompt" name="Invoke-BoltCommand.help.help has correct parameter type for SudoPasswordPrompt" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Targets" name="Invoke-BoltCommand.help.help has correct parameter type for Targets" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Trace" name="Invoke-BoltCommand.help.help has correct parameter type for Trace" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Transport" name="Invoke-BoltCommand.help.help has correct parameter type for Transport" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for TTY" name="Invoke-BoltCommand.help.help has correct parameter type for TTY" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for User" name="Invoke-BoltCommand.help.help has correct parameter type for User" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Invoke-BoltScript" executed="True" result="Success" success="True" time="4.1697" asserts="0" description="Invoke-BoltScript">
            <results>
              <test-suite type="TestFixture" name="Invoke-BoltScript.parameters" executed="True" result="Success" success="True" time="0.2035" asserts="0" description="Invoke-BoltScript.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltScript.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.1578" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Invoke-BoltScript.parameters.has correct parameters(Invoke-BoltScript)" time="0.1578" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltScript.parameters.has a primary parameter" executed="True" result="Success" success="True" time="0.0226" asserts="0" description="has a primary parameter">
                    <results>
                      <test-case description="has a primary parameter" name="Invoke-BoltScript.parameters.has a primary parameter(Invoke-BoltScript)" time="0.0226" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-BoltScript.help" executed="True" result="Success" success="True" time="2.0219" asserts="0" description="Invoke-BoltScript.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltScript.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0175" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Invoke-BoltScript.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Invoke-BoltScript}}; details=@{description=System.Management.Automation.PSObject[]; name=Invoke-BoltScript}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Invoke-BoltScript; Category=Function; Synopsis=bolt script run &lt;script&gt; [arguments] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltScript.help.gets description" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Invoke-BoltScript.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Invoke-BoltScript}}; details=@{description=System.Management.Automation.PSObject[]; name=Invoke-BoltScript}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Invoke-BoltScript; Category=Function; Synopsis=bolt script run &lt;script&gt; [arguments] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltScript.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0129" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Invoke-BoltScript.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Invoke-BoltScript}}; details=@{description=System.Management.Automation.PSObject[]; name=Invoke-BoltScript}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Invoke-BoltScript; Category=Function; Synopsis=bolt script run &lt;script&gt; [arguments] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltScript.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.5442" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: Arguments" name="Invoke-BoltScript.help.gets help for parameter: Arguments" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Cleanup" name="Invoke-BoltScript.help.gets help for parameter: Cleanup" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: ClearCache" name="Invoke-BoltScript.help.gets help for parameter: ClearCache" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Color" name="Invoke-BoltScript.help.gets help for parameter: Color" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Concurrency" name="Invoke-BoltScript.help.gets help for parameter: Concurrency" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: ConnectTimeout" name="Invoke-BoltScript.help.gets help for parameter: ConnectTimeout" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: CopyCommand" name="Invoke-BoltScript.help.gets help for parameter: CopyCommand" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: EnvVar" name="Invoke-BoltScript.help.gets help for parameter: EnvVar" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Format" name="Invoke-BoltScript.help.gets help for parameter: Format" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: HostKeyCheck" name="Invoke-BoltScript.help.gets help for parameter: HostKeyCheck" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Inventoryfile" name="Invoke-BoltScript.help.gets help for parameter: Inventoryfile" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Invoke-BoltScript.help.gets help for parameter: LogLevel" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Modulepath" name="Invoke-BoltScript.help.gets help for parameter: Modulepath" time="0.0305" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: NativeSsh" name="Invoke-BoltScript.help.gets help for parameter: NativeSsh" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Password" name="Invoke-BoltScript.help.gets help for parameter: Password" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: PasswordPrompt" name="Invoke-BoltScript.help.gets help for parameter: PasswordPrompt" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: PrivateKey" name="Invoke-BoltScript.help.gets help for parameter: PrivateKey" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Invoke-BoltScript.help.gets help for parameter: Project" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Query" name="Invoke-BoltScript.help.gets help for parameter: Query" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Rerun" name="Invoke-BoltScript.help.gets help for parameter: Rerun" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: RunAs" name="Invoke-BoltScript.help.gets help for parameter: RunAs" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SaveRerun" name="Invoke-BoltScript.help.gets help for parameter: SaveRerun" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Script" name="Invoke-BoltScript.help.gets help for parameter: Script" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SshCommand" name="Invoke-BoltScript.help.gets help for parameter: SshCommand" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Ssl" name="Invoke-BoltScript.help.gets help for parameter: Ssl" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SslVerify" name="Invoke-BoltScript.help.gets help for parameter: SslVerify" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoExecutable" name="Invoke-BoltScript.help.gets help for parameter: SudoExecutable" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoPassword" name="Invoke-BoltScript.help.gets help for parameter: SudoPassword" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoPasswordPrompt" name="Invoke-BoltScript.help.gets help for parameter: SudoPasswordPrompt" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Targets" name="Invoke-BoltScript.help.gets help for parameter: Targets" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Tmpdir" name="Invoke-BoltScript.help.gets help for parameter: Tmpdir" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Trace" name="Invoke-BoltScript.help.gets help for parameter: Trace" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Transport" name="Invoke-BoltScript.help.gets help for parameter: Transport" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: TTY" name="Invoke-BoltScript.help.gets help for parameter: TTY" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: User" name="Invoke-BoltScript.help.gets help for parameter: User" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltScript.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.5914" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for Arguments has correct Mandatory value" name="Invoke-BoltScript.help.help for Arguments has correct Mandatory value" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Cleanup has correct Mandatory value" name="Invoke-BoltScript.help.help for Cleanup has correct Mandatory value" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for ClearCache has correct Mandatory value" name="Invoke-BoltScript.help.help for ClearCache has correct Mandatory value" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Color has correct Mandatory value" name="Invoke-BoltScript.help.help for Color has correct Mandatory value" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Concurrency has correct Mandatory value" name="Invoke-BoltScript.help.help for Concurrency has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for ConnectTimeout has correct Mandatory value" name="Invoke-BoltScript.help.help for ConnectTimeout has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for CopyCommand has correct Mandatory value" name="Invoke-BoltScript.help.help for CopyCommand has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for EnvVar has correct Mandatory value" name="Invoke-BoltScript.help.help for EnvVar has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Format has correct Mandatory value" name="Invoke-BoltScript.help.help for Format has correct Mandatory value" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for HostKeyCheck has correct Mandatory value" name="Invoke-BoltScript.help.help for HostKeyCheck has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Inventoryfile has correct Mandatory value" name="Invoke-BoltScript.help.help for Inventoryfile has correct Mandatory value" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Invoke-BoltScript.help.help for LogLevel has correct Mandatory value" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Modulepath has correct Mandatory value" name="Invoke-BoltScript.help.help for Modulepath has correct Mandatory value" time="0.0267" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for NativeSsh has correct Mandatory value" name="Invoke-BoltScript.help.help for NativeSsh has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Password has correct Mandatory value" name="Invoke-BoltScript.help.help for Password has correct Mandatory value" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for PasswordPrompt has correct Mandatory value" name="Invoke-BoltScript.help.help for PasswordPrompt has correct Mandatory value" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for PrivateKey has correct Mandatory value" name="Invoke-BoltScript.help.help for PrivateKey has correct Mandatory value" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Invoke-BoltScript.help.help for Project has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Query has correct Mandatory value" name="Invoke-BoltScript.help.help for Query has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Rerun has correct Mandatory value" name="Invoke-BoltScript.help.help for Rerun has correct Mandatory value" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for RunAs has correct Mandatory value" name="Invoke-BoltScript.help.help for RunAs has correct Mandatory value" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SaveRerun has correct Mandatory value" name="Invoke-BoltScript.help.help for SaveRerun has correct Mandatory value" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Script has correct Mandatory value" name="Invoke-BoltScript.help.help for Script has correct Mandatory value" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SshCommand has correct Mandatory value" name="Invoke-BoltScript.help.help for SshCommand has correct Mandatory value" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Ssl has correct Mandatory value" name="Invoke-BoltScript.help.help for Ssl has correct Mandatory value" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SslVerify has correct Mandatory value" name="Invoke-BoltScript.help.help for SslVerify has correct Mandatory value" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoExecutable has correct Mandatory value" name="Invoke-BoltScript.help.help for SudoExecutable has correct Mandatory value" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoPassword has correct Mandatory value" name="Invoke-BoltScript.help.help for SudoPassword has correct Mandatory value" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoPasswordPrompt has correct Mandatory value" name="Invoke-BoltScript.help.help for SudoPasswordPrompt has correct Mandatory value" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Targets has correct Mandatory value" name="Invoke-BoltScript.help.help for Targets has correct Mandatory value" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Tmpdir has correct Mandatory value" name="Invoke-BoltScript.help.help for Tmpdir has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Trace has correct Mandatory value" name="Invoke-BoltScript.help.help for Trace has correct Mandatory value" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Transport has correct Mandatory value" name="Invoke-BoltScript.help.help for Transport has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for TTY has correct Mandatory value" name="Invoke-BoltScript.help.help for TTY has correct Mandatory value" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for User has correct Mandatory value" name="Invoke-BoltScript.help.help for User has correct Mandatory value" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltScript.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.5865" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for Arguments" name="Invoke-BoltScript.help.help has correct parameter type for Arguments" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Cleanup" name="Invoke-BoltScript.help.help has correct parameter type for Cleanup" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for ClearCache" name="Invoke-BoltScript.help.help has correct parameter type for ClearCache" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Color" name="Invoke-BoltScript.help.help has correct parameter type for Color" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Concurrency" name="Invoke-BoltScript.help.help has correct parameter type for Concurrency" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for ConnectTimeout" name="Invoke-BoltScript.help.help has correct parameter type for ConnectTimeout" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for CopyCommand" name="Invoke-BoltScript.help.help has correct parameter type for CopyCommand" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for EnvVar" name="Invoke-BoltScript.help.help has correct parameter type for EnvVar" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Format" name="Invoke-BoltScript.help.help has correct parameter type for Format" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for HostKeyCheck" name="Invoke-BoltScript.help.help has correct parameter type for HostKeyCheck" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Inventoryfile" name="Invoke-BoltScript.help.help has correct parameter type for Inventoryfile" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Invoke-BoltScript.help.help has correct parameter type for LogLevel" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Modulepath" name="Invoke-BoltScript.help.help has correct parameter type for Modulepath" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for NativeSsh" name="Invoke-BoltScript.help.help has correct parameter type for NativeSsh" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Password" name="Invoke-BoltScript.help.help has correct parameter type for Password" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for PasswordPrompt" name="Invoke-BoltScript.help.help has correct parameter type for PasswordPrompt" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for PrivateKey" name="Invoke-BoltScript.help.help has correct parameter type for PrivateKey" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Invoke-BoltScript.help.help has correct parameter type for Project" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Query" name="Invoke-BoltScript.help.help has correct parameter type for Query" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Rerun" name="Invoke-BoltScript.help.help has correct parameter type for Rerun" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for RunAs" name="Invoke-BoltScript.help.help has correct parameter type for RunAs" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SaveRerun" name="Invoke-BoltScript.help.help has correct parameter type for SaveRerun" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Script" name="Invoke-BoltScript.help.help has correct parameter type for Script" time="0.0191" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SshCommand" name="Invoke-BoltScript.help.help has correct parameter type for SshCommand" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Ssl" name="Invoke-BoltScript.help.help has correct parameter type for Ssl" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SslVerify" name="Invoke-BoltScript.help.help has correct parameter type for SslVerify" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoExecutable" name="Invoke-BoltScript.help.help has correct parameter type for SudoExecutable" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoPassword" name="Invoke-BoltScript.help.help has correct parameter type for SudoPassword" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoPasswordPrompt" name="Invoke-BoltScript.help.help has correct parameter type for SudoPasswordPrompt" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Targets" name="Invoke-BoltScript.help.help has correct parameter type for Targets" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Tmpdir" name="Invoke-BoltScript.help.help has correct parameter type for Tmpdir" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Trace" name="Invoke-BoltScript.help.help has correct parameter type for Trace" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Transport" name="Invoke-BoltScript.help.help has correct parameter type for Transport" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for TTY" name="Invoke-BoltScript.help.help has correct parameter type for TTY" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for User" name="Invoke-BoltScript.help.help has correct parameter type for User" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-BoltTask" executed="True" result="Success" success="True" time="4.6636" asserts="0" description="Get-BoltTask">
            <results>
              <test-suite type="TestFixture" name="Get-BoltTask.parameters" executed="True" result="Success" success="True" time="0.0617" asserts="0" description="Get-BoltTask.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Get-BoltTask.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Get-BoltTask.parameters.has correct parameters(Get-BoltTask)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Get-BoltTask.help" executed="True" result="Success" success="True" time="0.4762" asserts="0" description="Get-BoltTask.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Get-BoltTask.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0171" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Get-BoltTask.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Get-BoltTask}}; details=@{description=System.Management.Automation.PSObject[]; name=Get-BoltTask}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Get-BoltTask; Category=Function; Synopsis=bolt task show [task] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltTask.help.gets description" executed="True" result="Success" success="True" time="0.0146" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Get-BoltTask.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Get-BoltTask}}; details=@{description=System.Management.Automation.PSObject[]; name=Get-BoltTask}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Get-BoltTask; Category=Function; Synopsis=bolt task show [task] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltTask.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Get-BoltTask.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Get-BoltTask}}; details=@{description=System.Management.Automation.PSObject[]; name=Get-BoltTask}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Get-BoltTask; Category=Function; Synopsis=bolt task show [task] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltTask.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.1068" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: ClearCache" name="Get-BoltTask.help.gets help for parameter: ClearCache" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Filter" name="Get-BoltTask.help.gets help for parameter: Filter" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Format" name="Get-BoltTask.help.gets help for parameter: Format" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Get-BoltTask.help.gets help for parameter: LogLevel" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Modulepath" name="Get-BoltTask.help.gets help for parameter: Modulepath" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Name" name="Get-BoltTask.help.gets help for parameter: Name" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Get-BoltTask.help.gets help for parameter: Project" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltTask.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.1167" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for ClearCache has correct Mandatory value" name="Get-BoltTask.help.help for ClearCache has correct Mandatory value" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Filter has correct Mandatory value" name="Get-BoltTask.help.help for Filter has correct Mandatory value" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Format has correct Mandatory value" name="Get-BoltTask.help.help for Format has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Get-BoltTask.help.help for LogLevel has correct Mandatory value" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Modulepath has correct Mandatory value" name="Get-BoltTask.help.help for Modulepath has correct Mandatory value" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Name has correct Mandatory value" name="Get-BoltTask.help.help for Name has correct Mandatory value" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Get-BoltTask.help.help for Project has correct Mandatory value" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltTask.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.1161" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for ClearCache" name="Get-BoltTask.help.help has correct parameter type for ClearCache" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Filter" name="Get-BoltTask.help.help has correct parameter type for Filter" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Format" name="Get-BoltTask.help.help has correct parameter type for Format" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Get-BoltTask.help.help has correct parameter type for LogLevel" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Modulepath" name="Get-BoltTask.help.help has correct parameter type for Modulepath" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Name" name="Get-BoltTask.help.help has correct parameter type for Name" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Get-BoltTask.help.help has correct parameter type for Project" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Invoke-BoltTask" executed="True" result="Success" success="True" time="6.7321" asserts="0" description="Invoke-BoltTask">
            <results>
              <test-suite type="TestFixture" name="Invoke-BoltTask.parameters" executed="True" result="Success" success="True" time="0.2016" asserts="0" description="Invoke-BoltTask.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltTask.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.1593" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Invoke-BoltTask.parameters.has correct parameters(Invoke-BoltTask)" time="0.1593" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltTask.parameters.has a primary parameter" executed="True" result="Success" success="True" time="0.0217" asserts="0" description="has a primary parameter">
                    <results>
                      <test-case description="has a primary parameter" name="Invoke-BoltTask.parameters.has a primary parameter(Invoke-BoltTask)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-BoltTask.help" executed="True" result="Success" success="True" time="2.0492" asserts="0" description="Invoke-BoltTask.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltTask.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0189" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Invoke-BoltTask.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Invoke-BoltTask}}; details=@{description=System.Management.Automation.PSObject[]; name=Invoke-BoltTask}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Invoke-BoltTask; Category=Function; Synopsis=bolt task run &lt;task&gt; [parameters] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0189" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltTask.help.gets description" executed="True" result="Success" success="True" time="0.0166" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Invoke-BoltTask.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Invoke-BoltTask}}; details=@{description=System.Management.Automation.PSObject[]; name=Invoke-BoltTask}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Invoke-BoltTask; Category=Function; Synopsis=bolt task run &lt;task&gt; [parameters] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltTask.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Invoke-BoltTask.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Invoke-BoltTask}}; details=@{description=System.Management.Automation.PSObject[]; name=Invoke-BoltTask}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Invoke-BoltTask; Category=Function; Synopsis=bolt task run &lt;task&gt; [parameters] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltTask.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.5392" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: Cleanup" name="Invoke-BoltTask.help.gets help for parameter: Cleanup" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: ClearCache" name="Invoke-BoltTask.help.gets help for parameter: ClearCache" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Color" name="Invoke-BoltTask.help.gets help for parameter: Color" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Concurrency" name="Invoke-BoltTask.help.gets help for parameter: Concurrency" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: ConnectTimeout" name="Invoke-BoltTask.help.gets help for parameter: ConnectTimeout" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: CopyCommand" name="Invoke-BoltTask.help.gets help for parameter: CopyCommand" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Format" name="Invoke-BoltTask.help.gets help for parameter: Format" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: HostKeyCheck" name="Invoke-BoltTask.help.gets help for parameter: HostKeyCheck" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Inventoryfile" name="Invoke-BoltTask.help.gets help for parameter: Inventoryfile" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Invoke-BoltTask.help.gets help for parameter: LogLevel" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Modulepath" name="Invoke-BoltTask.help.gets help for parameter: Modulepath" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Name" name="Invoke-BoltTask.help.gets help for parameter: Name" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: NativeSsh" name="Invoke-BoltTask.help.gets help for parameter: NativeSsh" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Noop" name="Invoke-BoltTask.help.gets help for parameter: Noop" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Params" name="Invoke-BoltTask.help.gets help for parameter: Params" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Password" name="Invoke-BoltTask.help.gets help for parameter: Password" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: PasswordPrompt" name="Invoke-BoltTask.help.gets help for parameter: PasswordPrompt" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: PrivateKey" name="Invoke-BoltTask.help.gets help for parameter: PrivateKey" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Invoke-BoltTask.help.gets help for parameter: Project" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Query" name="Invoke-BoltTask.help.gets help for parameter: Query" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Rerun" name="Invoke-BoltTask.help.gets help for parameter: Rerun" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: RunAs" name="Invoke-BoltTask.help.gets help for parameter: RunAs" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SaveRerun" name="Invoke-BoltTask.help.gets help for parameter: SaveRerun" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SshCommand" name="Invoke-BoltTask.help.gets help for parameter: SshCommand" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Ssl" name="Invoke-BoltTask.help.gets help for parameter: Ssl" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SslVerify" name="Invoke-BoltTask.help.gets help for parameter: SslVerify" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoExecutable" name="Invoke-BoltTask.help.gets help for parameter: SudoExecutable" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoPassword" name="Invoke-BoltTask.help.gets help for parameter: SudoPassword" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoPasswordPrompt" name="Invoke-BoltTask.help.gets help for parameter: SudoPasswordPrompt" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Targets" name="Invoke-BoltTask.help.gets help for parameter: Targets" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Tmpdir" name="Invoke-BoltTask.help.gets help for parameter: Tmpdir" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Trace" name="Invoke-BoltTask.help.gets help for parameter: Trace" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Transport" name="Invoke-BoltTask.help.gets help for parameter: Transport" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: TTY" name="Invoke-BoltTask.help.gets help for parameter: TTY" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: User" name="Invoke-BoltTask.help.gets help for parameter: User" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltTask.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.6026" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for Cleanup has correct Mandatory value" name="Invoke-BoltTask.help.help for Cleanup has correct Mandatory value" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for ClearCache has correct Mandatory value" name="Invoke-BoltTask.help.help for ClearCache has correct Mandatory value" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Color has correct Mandatory value" name="Invoke-BoltTask.help.help for Color has correct Mandatory value" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Concurrency has correct Mandatory value" name="Invoke-BoltTask.help.help for Concurrency has correct Mandatory value" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for ConnectTimeout has correct Mandatory value" name="Invoke-BoltTask.help.help for ConnectTimeout has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for CopyCommand has correct Mandatory value" name="Invoke-BoltTask.help.help for CopyCommand has correct Mandatory value" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Format has correct Mandatory value" name="Invoke-BoltTask.help.help for Format has correct Mandatory value" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for HostKeyCheck has correct Mandatory value" name="Invoke-BoltTask.help.help for HostKeyCheck has correct Mandatory value" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Inventoryfile has correct Mandatory value" name="Invoke-BoltTask.help.help for Inventoryfile has correct Mandatory value" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Invoke-BoltTask.help.help for LogLevel has correct Mandatory value" time="0.0192" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Modulepath has correct Mandatory value" name="Invoke-BoltTask.help.help for Modulepath has correct Mandatory value" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Name has correct Mandatory value" name="Invoke-BoltTask.help.help for Name has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for NativeSsh has correct Mandatory value" name="Invoke-BoltTask.help.help for NativeSsh has correct Mandatory value" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Noop has correct Mandatory value" name="Invoke-BoltTask.help.help for Noop has correct Mandatory value" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Params has correct Mandatory value" name="Invoke-BoltTask.help.help for Params has correct Mandatory value" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Password has correct Mandatory value" name="Invoke-BoltTask.help.help for Password has correct Mandatory value" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for PasswordPrompt has correct Mandatory value" name="Invoke-BoltTask.help.help for PasswordPrompt has correct Mandatory value" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for PrivateKey has correct Mandatory value" name="Invoke-BoltTask.help.help for PrivateKey has correct Mandatory value" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Invoke-BoltTask.help.help for Project has correct Mandatory value" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Query has correct Mandatory value" name="Invoke-BoltTask.help.help for Query has correct Mandatory value" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Rerun has correct Mandatory value" name="Invoke-BoltTask.help.help for Rerun has correct Mandatory value" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for RunAs has correct Mandatory value" name="Invoke-BoltTask.help.help for RunAs has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SaveRerun has correct Mandatory value" name="Invoke-BoltTask.help.help for SaveRerun has correct Mandatory value" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SshCommand has correct Mandatory value" name="Invoke-BoltTask.help.help for SshCommand has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Ssl has correct Mandatory value" name="Invoke-BoltTask.help.help for Ssl has correct Mandatory value" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SslVerify has correct Mandatory value" name="Invoke-BoltTask.help.help for SslVerify has correct Mandatory value" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoExecutable has correct Mandatory value" name="Invoke-BoltTask.help.help for SudoExecutable has correct Mandatory value" time="0.0196" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoPassword has correct Mandatory value" name="Invoke-BoltTask.help.help for SudoPassword has correct Mandatory value" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoPasswordPrompt has correct Mandatory value" name="Invoke-BoltTask.help.help for SudoPasswordPrompt has correct Mandatory value" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Targets has correct Mandatory value" name="Invoke-BoltTask.help.help for Targets has correct Mandatory value" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Tmpdir has correct Mandatory value" name="Invoke-BoltTask.help.help for Tmpdir has correct Mandatory value" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Trace has correct Mandatory value" name="Invoke-BoltTask.help.help for Trace has correct Mandatory value" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Transport has correct Mandatory value" name="Invoke-BoltTask.help.help for Transport has correct Mandatory value" time="0.0191" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for TTY has correct Mandatory value" name="Invoke-BoltTask.help.help for TTY has correct Mandatory value" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for User has correct Mandatory value" name="Invoke-BoltTask.help.help for User has correct Mandatory value" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltTask.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.6026" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for Cleanup" name="Invoke-BoltTask.help.help has correct parameter type for Cleanup" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for ClearCache" name="Invoke-BoltTask.help.help has correct parameter type for ClearCache" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Color" name="Invoke-BoltTask.help.help has correct parameter type for Color" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Concurrency" name="Invoke-BoltTask.help.help has correct parameter type for Concurrency" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for ConnectTimeout" name="Invoke-BoltTask.help.help has correct parameter type for ConnectTimeout" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for CopyCommand" name="Invoke-BoltTask.help.help has correct parameter type for CopyCommand" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Format" name="Invoke-BoltTask.help.help has correct parameter type for Format" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for HostKeyCheck" name="Invoke-BoltTask.help.help has correct parameter type for HostKeyCheck" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Inventoryfile" name="Invoke-BoltTask.help.help has correct parameter type for Inventoryfile" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Invoke-BoltTask.help.help has correct parameter type for LogLevel" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Modulepath" name="Invoke-BoltTask.help.help has correct parameter type for Modulepath" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Name" name="Invoke-BoltTask.help.help has correct parameter type for Name" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for NativeSsh" name="Invoke-BoltTask.help.help has correct parameter type for NativeSsh" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Noop" name="Invoke-BoltTask.help.help has correct parameter type for Noop" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Params" name="Invoke-BoltTask.help.help has correct parameter type for Params" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Password" name="Invoke-BoltTask.help.help has correct parameter type for Password" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for PasswordPrompt" name="Invoke-BoltTask.help.help has correct parameter type for PasswordPrompt" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for PrivateKey" name="Invoke-BoltTask.help.help has correct parameter type for PrivateKey" time="0.0187" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Invoke-BoltTask.help.help has correct parameter type for Project" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Query" name="Invoke-BoltTask.help.help has correct parameter type for Query" time="0.0187" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Rerun" name="Invoke-BoltTask.help.help has correct parameter type for Rerun" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for RunAs" name="Invoke-BoltTask.help.help has correct parameter type for RunAs" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SaveRerun" name="Invoke-BoltTask.help.help has correct parameter type for SaveRerun" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SshCommand" name="Invoke-BoltTask.help.help has correct parameter type for SshCommand" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Ssl" name="Invoke-BoltTask.help.help has correct parameter type for Ssl" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SslVerify" name="Invoke-BoltTask.help.help has correct parameter type for SslVerify" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoExecutable" name="Invoke-BoltTask.help.help has correct parameter type for SudoExecutable" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoPassword" name="Invoke-BoltTask.help.help has correct parameter type for SudoPassword" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoPasswordPrompt" name="Invoke-BoltTask.help.help has correct parameter type for SudoPasswordPrompt" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Targets" name="Invoke-BoltTask.help.help has correct parameter type for Targets" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Tmpdir" name="Invoke-BoltTask.help.help has correct parameter type for Tmpdir" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Trace" name="Invoke-BoltTask.help.help has correct parameter type for Trace" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Transport" name="Invoke-BoltTask.help.help has correct parameter type for Transport" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for TTY" name="Invoke-BoltTask.help.help has correct parameter type for TTY" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for User" name="Invoke-BoltTask.help.help has correct parameter type for User" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-BoltPlan" executed="True" result="Success" success="True" time="7.2351" asserts="0" description="Get-BoltPlan">
            <results>
              <test-suite type="TestFixture" name="Get-BoltPlan.parameters" executed="True" result="Success" success="True" time="0.0635" asserts="0" description="Get-BoltPlan.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Get-BoltPlan.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Get-BoltPlan.parameters.has correct parameters(Get-BoltPlan)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Get-BoltPlan.help" executed="True" result="Success" success="True" time="0.4827" asserts="0" description="Get-BoltPlan.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Get-BoltPlan.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0197" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Get-BoltPlan.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Get-BoltPlan}}; details=@{description=System.Management.Automation.PSObject[]; name=Get-BoltPlan}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Get-BoltPlan; Category=Function; Synopsis=bolt plan show [plan] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0197" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltPlan.help.gets description" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Get-BoltPlan.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Get-BoltPlan}}; details=@{description=System.Management.Automation.PSObject[]; name=Get-BoltPlan}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Get-BoltPlan; Category=Function; Synopsis=bolt plan show [plan] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltPlan.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0132" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Get-BoltPlan.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Get-BoltPlan}}; details=@{description=System.Management.Automation.PSObject[]; name=Get-BoltPlan}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Get-BoltPlan; Category=Function; Synopsis=bolt plan show [plan] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltPlan.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.1052" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: ClearCache" name="Get-BoltPlan.help.gets help for parameter: ClearCache" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Filter" name="Get-BoltPlan.help.gets help for parameter: Filter" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Format" name="Get-BoltPlan.help.gets help for parameter: Format" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Get-BoltPlan.help.gets help for parameter: LogLevel" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Modulepath" name="Get-BoltPlan.help.gets help for parameter: Modulepath" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Name" name="Get-BoltPlan.help.gets help for parameter: Name" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Get-BoltPlan.help.gets help for parameter: Project" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltPlan.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.1201" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for ClearCache has correct Mandatory value" name="Get-BoltPlan.help.help for ClearCache has correct Mandatory value" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Filter has correct Mandatory value" name="Get-BoltPlan.help.help for Filter has correct Mandatory value" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Format has correct Mandatory value" name="Get-BoltPlan.help.help for Format has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Get-BoltPlan.help.help for LogLevel has correct Mandatory value" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Modulepath has correct Mandatory value" name="Get-BoltPlan.help.help for Modulepath has correct Mandatory value" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Name has correct Mandatory value" name="Get-BoltPlan.help.help for Name has correct Mandatory value" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Get-BoltPlan.help.help for Project has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltPlan.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.1182" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for ClearCache" name="Get-BoltPlan.help.help has correct parameter type for ClearCache" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Filter" name="Get-BoltPlan.help.help has correct parameter type for Filter" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Format" name="Get-BoltPlan.help.help has correct parameter type for Format" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Get-BoltPlan.help.help has correct parameter type for LogLevel" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Modulepath" name="Get-BoltPlan.help.help has correct parameter type for Modulepath" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Name" name="Get-BoltPlan.help.help has correct parameter type for Name" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Get-BoltPlan.help.help has correct parameter type for Project" time="0.019" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Invoke-BoltPlan" executed="True" result="Success" success="True" time="9.434" asserts="0" description="Invoke-BoltPlan">
            <results>
              <test-suite type="TestFixture" name="Invoke-BoltPlan.parameters" executed="True" result="Success" success="True" time="0.2072" asserts="0" description="Invoke-BoltPlan.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltPlan.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.1682" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Invoke-BoltPlan.parameters.has correct parameters(Invoke-BoltPlan)" time="0.1682" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltPlan.parameters.has a primary parameter" executed="True" result="Success" success="True" time="0.0201" asserts="0" description="has a primary parameter">
                    <results>
                      <test-case description="has a primary parameter" name="Invoke-BoltPlan.parameters.has a primary parameter(Invoke-BoltPlan)" time="0.0201" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-BoltPlan.help" executed="True" result="Success" success="True" time="2.1783" asserts="0" description="Invoke-BoltPlan.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltPlan.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0196" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Invoke-BoltPlan.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Invoke-BoltPlan}}; details=@{description=System.Management.Automation.PSObject[]; name=Invoke-BoltPlan}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Invoke-BoltPlan; Category=Function; Synopsis=bolt plan run &lt;plan&gt; [parameters] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0196" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltPlan.help.gets description" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Invoke-BoltPlan.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Invoke-BoltPlan}}; details=@{description=System.Management.Automation.PSObject[]; name=Invoke-BoltPlan}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Invoke-BoltPlan; Category=Function; Synopsis=bolt plan run &lt;plan&gt; [parameters] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltPlan.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0132" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Invoke-BoltPlan.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Invoke-BoltPlan}}; details=@{description=System.Management.Automation.PSObject[]; name=Invoke-BoltPlan}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Invoke-BoltPlan; Category=Function; Synopsis=bolt plan run &lt;plan&gt; [parameters] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltPlan.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.5789" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: Cleanup" name="Invoke-BoltPlan.help.gets help for parameter: Cleanup" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: ClearCache" name="Invoke-BoltPlan.help.gets help for parameter: ClearCache" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Color" name="Invoke-BoltPlan.help.gets help for parameter: Color" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: CompileConcurrency" name="Invoke-BoltPlan.help.gets help for parameter: CompileConcurrency" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Concurrency" name="Invoke-BoltPlan.help.gets help for parameter: Concurrency" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: ConnectTimeout" name="Invoke-BoltPlan.help.gets help for parameter: ConnectTimeout" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: CopyCommand" name="Invoke-BoltPlan.help.gets help for parameter: CopyCommand" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Format" name="Invoke-BoltPlan.help.gets help for parameter: Format" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: HieraConfig" name="Invoke-BoltPlan.help.gets help for parameter: HieraConfig" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: HostKeyCheck" name="Invoke-BoltPlan.help.gets help for parameter: HostKeyCheck" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Inventoryfile" name="Invoke-BoltPlan.help.gets help for parameter: Inventoryfile" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Invoke-BoltPlan.help.gets help for parameter: LogLevel" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Modulepath" name="Invoke-BoltPlan.help.gets help for parameter: Modulepath" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Name" name="Invoke-BoltPlan.help.gets help for parameter: Name" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: NativeSsh" name="Invoke-BoltPlan.help.gets help for parameter: NativeSsh" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Params" name="Invoke-BoltPlan.help.gets help for parameter: Params" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Password" name="Invoke-BoltPlan.help.gets help for parameter: Password" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: PasswordPrompt" name="Invoke-BoltPlan.help.gets help for parameter: PasswordPrompt" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: PrivateKey" name="Invoke-BoltPlan.help.gets help for parameter: PrivateKey" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Invoke-BoltPlan.help.gets help for parameter: Project" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Query" name="Invoke-BoltPlan.help.gets help for parameter: Query" time="0.0233" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Rerun" name="Invoke-BoltPlan.help.gets help for parameter: Rerun" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: RunAs" name="Invoke-BoltPlan.help.gets help for parameter: RunAs" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SaveRerun" name="Invoke-BoltPlan.help.gets help for parameter: SaveRerun" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SshCommand" name="Invoke-BoltPlan.help.gets help for parameter: SshCommand" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Ssl" name="Invoke-BoltPlan.help.gets help for parameter: Ssl" time="0.0278" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SslVerify" name="Invoke-BoltPlan.help.gets help for parameter: SslVerify" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoExecutable" name="Invoke-BoltPlan.help.gets help for parameter: SudoExecutable" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoPassword" name="Invoke-BoltPlan.help.gets help for parameter: SudoPassword" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoPasswordPrompt" name="Invoke-BoltPlan.help.gets help for parameter: SudoPasswordPrompt" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Targets" name="Invoke-BoltPlan.help.gets help for parameter: Targets" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Tmpdir" name="Invoke-BoltPlan.help.gets help for parameter: Tmpdir" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Trace" name="Invoke-BoltPlan.help.gets help for parameter: Trace" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Transport" name="Invoke-BoltPlan.help.gets help for parameter: Transport" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: TTY" name="Invoke-BoltPlan.help.gets help for parameter: TTY" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: User" name="Invoke-BoltPlan.help.gets help for parameter: User" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltPlan.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.6504" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for Cleanup has correct Mandatory value" name="Invoke-BoltPlan.help.help for Cleanup has correct Mandatory value" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for ClearCache has correct Mandatory value" name="Invoke-BoltPlan.help.help for ClearCache has correct Mandatory value" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Color has correct Mandatory value" name="Invoke-BoltPlan.help.help for Color has correct Mandatory value" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for CompileConcurrency has correct Mandatory value" name="Invoke-BoltPlan.help.help for CompileConcurrency has correct Mandatory value" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Concurrency has correct Mandatory value" name="Invoke-BoltPlan.help.help for Concurrency has correct Mandatory value" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for ConnectTimeout has correct Mandatory value" name="Invoke-BoltPlan.help.help for ConnectTimeout has correct Mandatory value" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for CopyCommand has correct Mandatory value" name="Invoke-BoltPlan.help.help for CopyCommand has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Format has correct Mandatory value" name="Invoke-BoltPlan.help.help for Format has correct Mandatory value" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for HieraConfig has correct Mandatory value" name="Invoke-BoltPlan.help.help for HieraConfig has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for HostKeyCheck has correct Mandatory value" name="Invoke-BoltPlan.help.help for HostKeyCheck has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Inventoryfile has correct Mandatory value" name="Invoke-BoltPlan.help.help for Inventoryfile has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Invoke-BoltPlan.help.help for LogLevel has correct Mandatory value" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Modulepath has correct Mandatory value" name="Invoke-BoltPlan.help.help for Modulepath has correct Mandatory value" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Name has correct Mandatory value" name="Invoke-BoltPlan.help.help for Name has correct Mandatory value" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for NativeSsh has correct Mandatory value" name="Invoke-BoltPlan.help.help for NativeSsh has correct Mandatory value" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Params has correct Mandatory value" name="Invoke-BoltPlan.help.help for Params has correct Mandatory value" time="0.0248" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Password has correct Mandatory value" name="Invoke-BoltPlan.help.help for Password has correct Mandatory value" time="0.026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for PasswordPrompt has correct Mandatory value" name="Invoke-BoltPlan.help.help for PasswordPrompt has correct Mandatory value" time="0.0192" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for PrivateKey has correct Mandatory value" name="Invoke-BoltPlan.help.help for PrivateKey has correct Mandatory value" time="0.0262" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Invoke-BoltPlan.help.help for Project has correct Mandatory value" time="0.0198" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Query has correct Mandatory value" name="Invoke-BoltPlan.help.help for Query has correct Mandatory value" time="0.0209" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Rerun has correct Mandatory value" name="Invoke-BoltPlan.help.help for Rerun has correct Mandatory value" time="0.0187" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for RunAs has correct Mandatory value" name="Invoke-BoltPlan.help.help for RunAs has correct Mandatory value" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SaveRerun has correct Mandatory value" name="Invoke-BoltPlan.help.help for SaveRerun has correct Mandatory value" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SshCommand has correct Mandatory value" name="Invoke-BoltPlan.help.help for SshCommand has correct Mandatory value" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Ssl has correct Mandatory value" name="Invoke-BoltPlan.help.help for Ssl has correct Mandatory value" time="0.029" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SslVerify has correct Mandatory value" name="Invoke-BoltPlan.help.help for SslVerify has correct Mandatory value" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoExecutable has correct Mandatory value" name="Invoke-BoltPlan.help.help for SudoExecutable has correct Mandatory value" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoPassword has correct Mandatory value" name="Invoke-BoltPlan.help.help for SudoPassword has correct Mandatory value" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoPasswordPrompt has correct Mandatory value" name="Invoke-BoltPlan.help.help for SudoPasswordPrompt has correct Mandatory value" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Targets has correct Mandatory value" name="Invoke-BoltPlan.help.help for Targets has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Tmpdir has correct Mandatory value" name="Invoke-BoltPlan.help.help for Tmpdir has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Trace has correct Mandatory value" name="Invoke-BoltPlan.help.help for Trace has correct Mandatory value" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Transport has correct Mandatory value" name="Invoke-BoltPlan.help.help for Transport has correct Mandatory value" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for TTY has correct Mandatory value" name="Invoke-BoltPlan.help.help for TTY has correct Mandatory value" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for User has correct Mandatory value" name="Invoke-BoltPlan.help.help for User has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltPlan.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.6419" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for Cleanup" name="Invoke-BoltPlan.help.help has correct parameter type for Cleanup" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for ClearCache" name="Invoke-BoltPlan.help.help has correct parameter type for ClearCache" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Color" name="Invoke-BoltPlan.help.help has correct parameter type for Color" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for CompileConcurrency" name="Invoke-BoltPlan.help.help has correct parameter type for CompileConcurrency" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Concurrency" name="Invoke-BoltPlan.help.help has correct parameter type for Concurrency" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for ConnectTimeout" name="Invoke-BoltPlan.help.help has correct parameter type for ConnectTimeout" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for CopyCommand" name="Invoke-BoltPlan.help.help has correct parameter type for CopyCommand" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Format" name="Invoke-BoltPlan.help.help has correct parameter type for Format" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for HieraConfig" name="Invoke-BoltPlan.help.help has correct parameter type for HieraConfig" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for HostKeyCheck" name="Invoke-BoltPlan.help.help has correct parameter type for HostKeyCheck" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Inventoryfile" name="Invoke-BoltPlan.help.help has correct parameter type for Inventoryfile" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Invoke-BoltPlan.help.help has correct parameter type for LogLevel" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Modulepath" name="Invoke-BoltPlan.help.help has correct parameter type for Modulepath" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Name" name="Invoke-BoltPlan.help.help has correct parameter type for Name" time="0.0244" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for NativeSsh" name="Invoke-BoltPlan.help.help has correct parameter type for NativeSsh" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Params" name="Invoke-BoltPlan.help.help has correct parameter type for Params" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Password" name="Invoke-BoltPlan.help.help has correct parameter type for Password" time="0.0201" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for PasswordPrompt" name="Invoke-BoltPlan.help.help has correct parameter type for PasswordPrompt" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for PrivateKey" name="Invoke-BoltPlan.help.help has correct parameter type for PrivateKey" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Invoke-BoltPlan.help.help has correct parameter type for Project" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Query" name="Invoke-BoltPlan.help.help has correct parameter type for Query" time="0.0197" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Rerun" name="Invoke-BoltPlan.help.help has correct parameter type for Rerun" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for RunAs" name="Invoke-BoltPlan.help.help has correct parameter type for RunAs" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SaveRerun" name="Invoke-BoltPlan.help.help has correct parameter type for SaveRerun" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SshCommand" name="Invoke-BoltPlan.help.help has correct parameter type for SshCommand" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Ssl" name="Invoke-BoltPlan.help.help has correct parameter type for Ssl" time="0.0197" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SslVerify" name="Invoke-BoltPlan.help.help has correct parameter type for SslVerify" time="0.0187" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoExecutable" name="Invoke-BoltPlan.help.help has correct parameter type for SudoExecutable" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoPassword" name="Invoke-BoltPlan.help.help has correct parameter type for SudoPassword" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoPasswordPrompt" name="Invoke-BoltPlan.help.help has correct parameter type for SudoPasswordPrompt" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Targets" name="Invoke-BoltPlan.help.help has correct parameter type for Targets" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Tmpdir" name="Invoke-BoltPlan.help.help has correct parameter type for Tmpdir" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Trace" name="Invoke-BoltPlan.help.help has correct parameter type for Trace" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Transport" name="Invoke-BoltPlan.help.help has correct parameter type for Transport" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for TTY" name="Invoke-BoltPlan.help.help has correct parameter type for TTY" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for User" name="Invoke-BoltPlan.help.help has correct parameter type for User" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Convert-BoltPlan" executed="True" result="Success" success="True" time="9.8342" asserts="0" description="Convert-BoltPlan">
            <results>
              <test-suite type="TestFixture" name="Convert-BoltPlan.parameters" executed="True" result="Success" success="True" time="0.0744" asserts="0" description="Convert-BoltPlan.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Convert-BoltPlan.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.0306" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Convert-BoltPlan.parameters.has correct parameters(Convert-BoltPlan)" time="0.0306" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Convert-BoltPlan.parameters.has a primary parameter" executed="True" result="Success" success="True" time="0.0224" asserts="0" description="has a primary parameter">
                    <results>
                      <test-case description="has a primary parameter" name="Convert-BoltPlan.parameters.has a primary parameter(Convert-BoltPlan)" time="0.0224" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Convert-BoltPlan.help" executed="True" result="Success" success="True" time="0.3827" asserts="0" description="Convert-BoltPlan.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Convert-BoltPlan.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0171" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Convert-BoltPlan.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Convert-BoltPlan}}; details=@{description=System.Management.Automation.PSObject[]; name=Convert-BoltPlan}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Convert-BoltPlan; Category=Function; Synopsis=bolt plan convert &lt;path&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Convert-BoltPlan.help.gets description" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Convert-BoltPlan.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Convert-BoltPlan}}; details=@{description=System.Management.Automation.PSObject[]; name=Convert-BoltPlan}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Convert-BoltPlan; Category=Function; Synopsis=bolt plan convert &lt;path&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Convert-BoltPlan.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Convert-BoltPlan.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Convert-BoltPlan}}; details=@{description=System.Management.Automation.PSObject[]; name=Convert-BoltPlan}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Convert-BoltPlan; Category=Function; Synopsis=bolt plan convert &lt;path&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Convert-BoltPlan.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0737" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: ClearCache" name="Convert-BoltPlan.help.gets help for parameter: ClearCache" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Convert-BoltPlan.help.gets help for parameter: LogLevel" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Modulepath" name="Convert-BoltPlan.help.gets help for parameter: Modulepath" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Name" name="Convert-BoltPlan.help.gets help for parameter: Name" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Convert-BoltPlan.help.gets help for parameter: Project" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Convert-BoltPlan.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.0796" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for ClearCache has correct Mandatory value" name="Convert-BoltPlan.help.help for ClearCache has correct Mandatory value" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Convert-BoltPlan.help.help for LogLevel has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Modulepath has correct Mandatory value" name="Convert-BoltPlan.help.help for Modulepath has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Name has correct Mandatory value" name="Convert-BoltPlan.help.help for Name has correct Mandatory value" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Convert-BoltPlan.help.help for Project has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Convert-BoltPlan.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0803" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for ClearCache" name="Convert-BoltPlan.help.help has correct parameter type for ClearCache" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Convert-BoltPlan.help.help has correct parameter type for LogLevel" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Modulepath" name="Convert-BoltPlan.help.help has correct parameter type for Modulepath" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Name" name="Convert-BoltPlan.help.help has correct parameter type for Name" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Convert-BoltPlan.help.help has correct parameter type for Project" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-BoltPlan" executed="True" result="Success" success="True" time="10.2371" asserts="0" description="New-BoltPlan">
            <results>
              <test-suite type="TestFixture" name="New-BoltPlan.parameters" executed="True" result="Success" success="True" time="0.0756" asserts="0" description="New-BoltPlan.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="New-BoltPlan.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.0316" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="New-BoltPlan.parameters.has correct parameters(New-BoltPlan)" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="New-BoltPlan.parameters.has a primary parameter" executed="True" result="Success" success="True" time="0.0218" asserts="0" description="has a primary parameter">
                    <results>
                      <test-case description="has a primary parameter" name="New-BoltPlan.parameters.has a primary parameter(New-BoltPlan)" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="New-BoltPlan.help" executed="True" result="Success" success="True" time="0.3823" asserts="0" description="New-BoltPlan.help">
                <results>
                  <test-suite type="ParameterizedTest" name="New-BoltPlan.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0173" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="New-BoltPlan.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=New-BoltPlan}}; details=@{description=System.Management.Automation.PSObject[]; name=New-BoltPlan}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=New-BoltPlan; Category=Function; Synopsis=bolt plan new &lt;plan&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="New-BoltPlan.help.gets description" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="New-BoltPlan.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=New-BoltPlan}}; details=@{description=System.Management.Automation.PSObject[]; name=New-BoltPlan}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=New-BoltPlan; Category=Function; Synopsis=bolt plan new &lt;plan&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="New-BoltPlan.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="New-BoltPlan.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=New-BoltPlan}}; details=@{description=System.Management.Automation.PSObject[]; name=New-BoltPlan}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=New-BoltPlan; Category=Function; Synopsis=bolt plan new &lt;plan&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="New-BoltPlan.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0712" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: ClearCache" name="New-BoltPlan.help.gets help for parameter: ClearCache" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="New-BoltPlan.help.gets help for parameter: LogLevel" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Name" name="New-BoltPlan.help.gets help for parameter: Name" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Pp" name="New-BoltPlan.help.gets help for parameter: Pp" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="New-BoltPlan.help.gets help for parameter: Project" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="New-BoltPlan.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.0822" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for ClearCache has correct Mandatory value" name="New-BoltPlan.help.help for ClearCache has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="New-BoltPlan.help.help for LogLevel has correct Mandatory value" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Name has correct Mandatory value" name="New-BoltPlan.help.help for Name has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Pp has correct Mandatory value" name="New-BoltPlan.help.help for Pp has correct Mandatory value" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="New-BoltPlan.help.help for Project has correct Mandatory value" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="New-BoltPlan.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0829" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for ClearCache" name="New-BoltPlan.help.help has correct parameter type for ClearCache" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="New-BoltPlan.help.help has correct parameter type for LogLevel" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Name" name="New-BoltPlan.help.help has correct parameter type for Name" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Pp" name="New-BoltPlan.help.help has correct parameter type for Pp" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="New-BoltPlan.help.help has correct parameter type for Project" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Receive-BoltFile" executed="True" result="Success" success="True" time="12.1945" asserts="0" description="Receive-BoltFile">
            <results>
              <test-suite type="TestFixture" name="Receive-BoltFile.parameters" executed="True" result="Success" success="True" time="0.2386" asserts="0" description="Receive-BoltFile.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Receive-BoltFile.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.1667" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Receive-BoltFile.parameters.has correct parameters(Receive-BoltFile)" time="0.1667" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Receive-BoltFile.parameters.has a primary parameter" executed="True" result="Success" success="True" time="0.0242" asserts="0" description="has a primary parameter">
                    <results>
                      <test-case description="has a primary parameter" name="Receive-BoltFile.parameters.has a primary parameter(Receive-BoltFile)" time="0.0242" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Receive-BoltFile.parameters.has a primary parameter" executed="True" result="Success" success="True" time="0.0221" asserts="0" description="has a primary parameter">
                    <results>
                      <test-case description="has a primary parameter" name="Receive-BoltFile.parameters.has a primary parameter(Receive-BoltFile)" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Receive-BoltFile.help" executed="True" result="Success" success="True" time="1.9394" asserts="0" description="Receive-BoltFile.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Receive-BoltFile.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0193" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Receive-BoltFile.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Receive-BoltFile}}; details=@{description=System.Management.Automation.PSObject[]; name=Receive-BoltFile}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Receive-BoltFile; Category=Function; Synopsis=bolt file download &lt;src&gt; &lt;dest&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0193" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Receive-BoltFile.help.gets description" executed="True" result="Success" success="True" time="0.0166" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Receive-BoltFile.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Receive-BoltFile}}; details=@{description=System.Management.Automation.PSObject[]; name=Receive-BoltFile}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Receive-BoltFile; Category=Function; Synopsis=bolt file download &lt;src&gt; &lt;dest&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Receive-BoltFile.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0175" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Receive-BoltFile.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Receive-BoltFile}}; details=@{description=System.Management.Automation.PSObject[]; name=Receive-BoltFile}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Receive-BoltFile; Category=Function; Synopsis=bolt file download &lt;src&gt; &lt;dest&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Receive-BoltFile.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.4931" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: Cleanup" name="Receive-BoltFile.help.gets help for parameter: Cleanup" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: ClearCache" name="Receive-BoltFile.help.gets help for parameter: ClearCache" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Color" name="Receive-BoltFile.help.gets help for parameter: Color" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Concurrency" name="Receive-BoltFile.help.gets help for parameter: Concurrency" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: ConnectTimeout" name="Receive-BoltFile.help.gets help for parameter: ConnectTimeout" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: CopyCommand" name="Receive-BoltFile.help.gets help for parameter: CopyCommand" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Destination" name="Receive-BoltFile.help.gets help for parameter: Destination" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Format" name="Receive-BoltFile.help.gets help for parameter: Format" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: HostKeyCheck" name="Receive-BoltFile.help.gets help for parameter: HostKeyCheck" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Inventoryfile" name="Receive-BoltFile.help.gets help for parameter: Inventoryfile" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Receive-BoltFile.help.gets help for parameter: LogLevel" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Modulepath" name="Receive-BoltFile.help.gets help for parameter: Modulepath" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: NativeSsh" name="Receive-BoltFile.help.gets help for parameter: NativeSsh" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Password" name="Receive-BoltFile.help.gets help for parameter: Password" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: PasswordPrompt" name="Receive-BoltFile.help.gets help for parameter: PasswordPrompt" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: PrivateKey" name="Receive-BoltFile.help.gets help for parameter: PrivateKey" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Receive-BoltFile.help.gets help for parameter: Project" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Query" name="Receive-BoltFile.help.gets help for parameter: Query" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Rerun" name="Receive-BoltFile.help.gets help for parameter: Rerun" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: RunAs" name="Receive-BoltFile.help.gets help for parameter: RunAs" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SaveRerun" name="Receive-BoltFile.help.gets help for parameter: SaveRerun" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Source" name="Receive-BoltFile.help.gets help for parameter: Source" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SshCommand" name="Receive-BoltFile.help.gets help for parameter: SshCommand" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Ssl" name="Receive-BoltFile.help.gets help for parameter: Ssl" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SslVerify" name="Receive-BoltFile.help.gets help for parameter: SslVerify" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoExecutable" name="Receive-BoltFile.help.gets help for parameter: SudoExecutable" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoPassword" name="Receive-BoltFile.help.gets help for parameter: SudoPassword" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoPasswordPrompt" name="Receive-BoltFile.help.gets help for parameter: SudoPasswordPrompt" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Targets" name="Receive-BoltFile.help.gets help for parameter: Targets" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Trace" name="Receive-BoltFile.help.gets help for parameter: Trace" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Transport" name="Receive-BoltFile.help.gets help for parameter: Transport" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: TTY" name="Receive-BoltFile.help.gets help for parameter: TTY" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: User" name="Receive-BoltFile.help.gets help for parameter: User" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Receive-BoltFile.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.5485" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for Cleanup has correct Mandatory value" name="Receive-BoltFile.help.help for Cleanup has correct Mandatory value" time="0.0189" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for ClearCache has correct Mandatory value" name="Receive-BoltFile.help.help for ClearCache has correct Mandatory value" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Color has correct Mandatory value" name="Receive-BoltFile.help.help for Color has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Concurrency has correct Mandatory value" name="Receive-BoltFile.help.help for Concurrency has correct Mandatory value" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for ConnectTimeout has correct Mandatory value" name="Receive-BoltFile.help.help for ConnectTimeout has correct Mandatory value" time="0.019" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for CopyCommand has correct Mandatory value" name="Receive-BoltFile.help.help for CopyCommand has correct Mandatory value" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Destination has correct Mandatory value" name="Receive-BoltFile.help.help for Destination has correct Mandatory value" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Format has correct Mandatory value" name="Receive-BoltFile.help.help for Format has correct Mandatory value" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for HostKeyCheck has correct Mandatory value" name="Receive-BoltFile.help.help for HostKeyCheck has correct Mandatory value" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Inventoryfile has correct Mandatory value" name="Receive-BoltFile.help.help for Inventoryfile has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Receive-BoltFile.help.help for LogLevel has correct Mandatory value" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Modulepath has correct Mandatory value" name="Receive-BoltFile.help.help for Modulepath has correct Mandatory value" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for NativeSsh has correct Mandatory value" name="Receive-BoltFile.help.help for NativeSsh has correct Mandatory value" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Password has correct Mandatory value" name="Receive-BoltFile.help.help for Password has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for PasswordPrompt has correct Mandatory value" name="Receive-BoltFile.help.help for PasswordPrompt has correct Mandatory value" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for PrivateKey has correct Mandatory value" name="Receive-BoltFile.help.help for PrivateKey has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Receive-BoltFile.help.help for Project has correct Mandatory value" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Query has correct Mandatory value" name="Receive-BoltFile.help.help for Query has correct Mandatory value" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Rerun has correct Mandatory value" name="Receive-BoltFile.help.help for Rerun has correct Mandatory value" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for RunAs has correct Mandatory value" name="Receive-BoltFile.help.help for RunAs has correct Mandatory value" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SaveRerun has correct Mandatory value" name="Receive-BoltFile.help.help for SaveRerun has correct Mandatory value" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Source has correct Mandatory value" name="Receive-BoltFile.help.help for Source has correct Mandatory value" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SshCommand has correct Mandatory value" name="Receive-BoltFile.help.help for SshCommand has correct Mandatory value" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Ssl has correct Mandatory value" name="Receive-BoltFile.help.help for Ssl has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SslVerify has correct Mandatory value" name="Receive-BoltFile.help.help for SslVerify has correct Mandatory value" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoExecutable has correct Mandatory value" name="Receive-BoltFile.help.help for SudoExecutable has correct Mandatory value" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoPassword has correct Mandatory value" name="Receive-BoltFile.help.help for SudoPassword has correct Mandatory value" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoPasswordPrompt has correct Mandatory value" name="Receive-BoltFile.help.help for SudoPasswordPrompt has correct Mandatory value" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Targets has correct Mandatory value" name="Receive-BoltFile.help.help for Targets has correct Mandatory value" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Trace has correct Mandatory value" name="Receive-BoltFile.help.help for Trace has correct Mandatory value" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Transport has correct Mandatory value" name="Receive-BoltFile.help.help for Transport has correct Mandatory value" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for TTY has correct Mandatory value" name="Receive-BoltFile.help.help for TTY has correct Mandatory value" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for User has correct Mandatory value" name="Receive-BoltFile.help.help for User has correct Mandatory value" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Receive-BoltFile.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.5523" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for Cleanup" name="Receive-BoltFile.help.help has correct parameter type for Cleanup" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for ClearCache" name="Receive-BoltFile.help.help has correct parameter type for ClearCache" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Color" name="Receive-BoltFile.help.help has correct parameter type for Color" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Concurrency" name="Receive-BoltFile.help.help has correct parameter type for Concurrency" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for ConnectTimeout" name="Receive-BoltFile.help.help has correct parameter type for ConnectTimeout" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for CopyCommand" name="Receive-BoltFile.help.help has correct parameter type for CopyCommand" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Destination" name="Receive-BoltFile.help.help has correct parameter type for Destination" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Format" name="Receive-BoltFile.help.help has correct parameter type for Format" time="0.019" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for HostKeyCheck" name="Receive-BoltFile.help.help has correct parameter type for HostKeyCheck" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Inventoryfile" name="Receive-BoltFile.help.help has correct parameter type for Inventoryfile" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Receive-BoltFile.help.help has correct parameter type for LogLevel" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Modulepath" name="Receive-BoltFile.help.help has correct parameter type for Modulepath" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for NativeSsh" name="Receive-BoltFile.help.help has correct parameter type for NativeSsh" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Password" name="Receive-BoltFile.help.help has correct parameter type for Password" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for PasswordPrompt" name="Receive-BoltFile.help.help has correct parameter type for PasswordPrompt" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for PrivateKey" name="Receive-BoltFile.help.help has correct parameter type for PrivateKey" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Receive-BoltFile.help.help has correct parameter type for Project" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Query" name="Receive-BoltFile.help.help has correct parameter type for Query" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Rerun" name="Receive-BoltFile.help.help has correct parameter type for Rerun" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for RunAs" name="Receive-BoltFile.help.help has correct parameter type for RunAs" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SaveRerun" name="Receive-BoltFile.help.help has correct parameter type for SaveRerun" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Source" name="Receive-BoltFile.help.help has correct parameter type for Source" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SshCommand" name="Receive-BoltFile.help.help has correct parameter type for SshCommand" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Ssl" name="Receive-BoltFile.help.help has correct parameter type for Ssl" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SslVerify" name="Receive-BoltFile.help.help has correct parameter type for SslVerify" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoExecutable" name="Receive-BoltFile.help.help has correct parameter type for SudoExecutable" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoPassword" name="Receive-BoltFile.help.help has correct parameter type for SudoPassword" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoPasswordPrompt" name="Receive-BoltFile.help.help has correct parameter type for SudoPasswordPrompt" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Targets" name="Receive-BoltFile.help.help has correct parameter type for Targets" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Trace" name="Receive-BoltFile.help.help has correct parameter type for Trace" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Transport" name="Receive-BoltFile.help.help has correct parameter type for Transport" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for TTY" name="Receive-BoltFile.help.help has correct parameter type for TTY" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for User" name="Receive-BoltFile.help.help has correct parameter type for User" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Send-BoltFile" executed="True" result="Success" success="True" time="14.1442" asserts="0" description="Send-BoltFile">
            <results>
              <test-suite type="TestFixture" name="Send-BoltFile.parameters" executed="True" result="Success" success="True" time="0.2114" asserts="0" description="Send-BoltFile.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Send-BoltFile.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.1516" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Send-BoltFile.parameters.has correct parameters(Send-BoltFile)" time="0.1516" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Send-BoltFile.parameters.has a primary parameter" executed="True" result="Success" success="True" time="0.0195" asserts="0" description="has a primary parameter">
                    <results>
                      <test-case description="has a primary parameter" name="Send-BoltFile.parameters.has a primary parameter(Send-BoltFile)" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Send-BoltFile.parameters.has a primary parameter" executed="True" result="Success" success="True" time="0.0198" asserts="0" description="has a primary parameter">
                    <results>
                      <test-case description="has a primary parameter" name="Send-BoltFile.parameters.has a primary parameter(Send-BoltFile)" time="0.0198" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Send-BoltFile.help" executed="True" result="Success" success="True" time="1.9308" asserts="0" description="Send-BoltFile.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Send-BoltFile.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0173" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Send-BoltFile.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Send-BoltFile}}; details=@{description=System.Management.Automation.PSObject[]; name=Send-BoltFile}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Send-BoltFile; Category=Function; Synopsis=bolt file upload &lt;src&gt; &lt;dest&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Send-BoltFile.help.gets description" executed="True" result="Success" success="True" time="0.015" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Send-BoltFile.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Send-BoltFile}}; details=@{description=System.Management.Automation.PSObject[]; name=Send-BoltFile}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Send-BoltFile; Category=Function; Synopsis=bolt file upload &lt;src&gt; &lt;dest&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Send-BoltFile.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Send-BoltFile.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Send-BoltFile}}; details=@{description=System.Management.Automation.PSObject[]; name=Send-BoltFile}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Send-BoltFile; Category=Function; Synopsis=bolt file upload &lt;src&gt; &lt;dest&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Send-BoltFile.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.5015" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: Cleanup" name="Send-BoltFile.help.gets help for parameter: Cleanup" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: ClearCache" name="Send-BoltFile.help.gets help for parameter: ClearCache" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Color" name="Send-BoltFile.help.gets help for parameter: Color" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Concurrency" name="Send-BoltFile.help.gets help for parameter: Concurrency" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: ConnectTimeout" name="Send-BoltFile.help.gets help for parameter: ConnectTimeout" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: CopyCommand" name="Send-BoltFile.help.gets help for parameter: CopyCommand" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Destination" name="Send-BoltFile.help.gets help for parameter: Destination" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Format" name="Send-BoltFile.help.gets help for parameter: Format" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: HostKeyCheck" name="Send-BoltFile.help.gets help for parameter: HostKeyCheck" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Inventoryfile" name="Send-BoltFile.help.gets help for parameter: Inventoryfile" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Send-BoltFile.help.gets help for parameter: LogLevel" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Modulepath" name="Send-BoltFile.help.gets help for parameter: Modulepath" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: NativeSsh" name="Send-BoltFile.help.gets help for parameter: NativeSsh" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Password" name="Send-BoltFile.help.gets help for parameter: Password" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: PasswordPrompt" name="Send-BoltFile.help.gets help for parameter: PasswordPrompt" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: PrivateKey" name="Send-BoltFile.help.gets help for parameter: PrivateKey" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Send-BoltFile.help.gets help for parameter: Project" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Query" name="Send-BoltFile.help.gets help for parameter: Query" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Rerun" name="Send-BoltFile.help.gets help for parameter: Rerun" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: RunAs" name="Send-BoltFile.help.gets help for parameter: RunAs" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SaveRerun" name="Send-BoltFile.help.gets help for parameter: SaveRerun" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Source" name="Send-BoltFile.help.gets help for parameter: Source" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SshCommand" name="Send-BoltFile.help.gets help for parameter: SshCommand" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Ssl" name="Send-BoltFile.help.gets help for parameter: Ssl" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SslVerify" name="Send-BoltFile.help.gets help for parameter: SslVerify" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoExecutable" name="Send-BoltFile.help.gets help for parameter: SudoExecutable" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoPassword" name="Send-BoltFile.help.gets help for parameter: SudoPassword" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoPasswordPrompt" name="Send-BoltFile.help.gets help for parameter: SudoPasswordPrompt" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Targets" name="Send-BoltFile.help.gets help for parameter: Targets" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Tmpdir" name="Send-BoltFile.help.gets help for parameter: Tmpdir" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Trace" name="Send-BoltFile.help.gets help for parameter: Trace" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Transport" name="Send-BoltFile.help.gets help for parameter: Transport" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: TTY" name="Send-BoltFile.help.gets help for parameter: TTY" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: User" name="Send-BoltFile.help.gets help for parameter: User" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Send-BoltFile.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.5601" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for Cleanup has correct Mandatory value" name="Send-BoltFile.help.help for Cleanup has correct Mandatory value" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for ClearCache has correct Mandatory value" name="Send-BoltFile.help.help for ClearCache has correct Mandatory value" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Color has correct Mandatory value" name="Send-BoltFile.help.help for Color has correct Mandatory value" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Concurrency has correct Mandatory value" name="Send-BoltFile.help.help for Concurrency has correct Mandatory value" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for ConnectTimeout has correct Mandatory value" name="Send-BoltFile.help.help for ConnectTimeout has correct Mandatory value" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for CopyCommand has correct Mandatory value" name="Send-BoltFile.help.help for CopyCommand has correct Mandatory value" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Destination has correct Mandatory value" name="Send-BoltFile.help.help for Destination has correct Mandatory value" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Format has correct Mandatory value" name="Send-BoltFile.help.help for Format has correct Mandatory value" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for HostKeyCheck has correct Mandatory value" name="Send-BoltFile.help.help for HostKeyCheck has correct Mandatory value" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Inventoryfile has correct Mandatory value" name="Send-BoltFile.help.help for Inventoryfile has correct Mandatory value" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Send-BoltFile.help.help for LogLevel has correct Mandatory value" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Modulepath has correct Mandatory value" name="Send-BoltFile.help.help for Modulepath has correct Mandatory value" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for NativeSsh has correct Mandatory value" name="Send-BoltFile.help.help for NativeSsh has correct Mandatory value" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Password has correct Mandatory value" name="Send-BoltFile.help.help for Password has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for PasswordPrompt has correct Mandatory value" name="Send-BoltFile.help.help for PasswordPrompt has correct Mandatory value" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for PrivateKey has correct Mandatory value" name="Send-BoltFile.help.help for PrivateKey has correct Mandatory value" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Send-BoltFile.help.help for Project has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Query has correct Mandatory value" name="Send-BoltFile.help.help for Query has correct Mandatory value" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Rerun has correct Mandatory value" name="Send-BoltFile.help.help for Rerun has correct Mandatory value" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for RunAs has correct Mandatory value" name="Send-BoltFile.help.help for RunAs has correct Mandatory value" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SaveRerun has correct Mandatory value" name="Send-BoltFile.help.help for SaveRerun has correct Mandatory value" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Source has correct Mandatory value" name="Send-BoltFile.help.help for Source has correct Mandatory value" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SshCommand has correct Mandatory value" name="Send-BoltFile.help.help for SshCommand has correct Mandatory value" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Ssl has correct Mandatory value" name="Send-BoltFile.help.help for Ssl has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SslVerify has correct Mandatory value" name="Send-BoltFile.help.help for SslVerify has correct Mandatory value" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoExecutable has correct Mandatory value" name="Send-BoltFile.help.help for SudoExecutable has correct Mandatory value" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoPassword has correct Mandatory value" name="Send-BoltFile.help.help for SudoPassword has correct Mandatory value" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoPasswordPrompt has correct Mandatory value" name="Send-BoltFile.help.help for SudoPasswordPrompt has correct Mandatory value" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Targets has correct Mandatory value" name="Send-BoltFile.help.help for Targets has correct Mandatory value" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Tmpdir has correct Mandatory value" name="Send-BoltFile.help.help for Tmpdir has correct Mandatory value" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Trace has correct Mandatory value" name="Send-BoltFile.help.help for Trace has correct Mandatory value" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Transport has correct Mandatory value" name="Send-BoltFile.help.help for Transport has correct Mandatory value" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for TTY has correct Mandatory value" name="Send-BoltFile.help.help for TTY has correct Mandatory value" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for User has correct Mandatory value" name="Send-BoltFile.help.help for User has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Send-BoltFile.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.5617" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for Cleanup" name="Send-BoltFile.help.help has correct parameter type for Cleanup" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for ClearCache" name="Send-BoltFile.help.help has correct parameter type for ClearCache" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Color" name="Send-BoltFile.help.help has correct parameter type for Color" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Concurrency" name="Send-BoltFile.help.help has correct parameter type for Concurrency" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for ConnectTimeout" name="Send-BoltFile.help.help has correct parameter type for ConnectTimeout" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for CopyCommand" name="Send-BoltFile.help.help has correct parameter type for CopyCommand" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Destination" name="Send-BoltFile.help.help has correct parameter type for Destination" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Format" name="Send-BoltFile.help.help has correct parameter type for Format" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for HostKeyCheck" name="Send-BoltFile.help.help has correct parameter type for HostKeyCheck" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Inventoryfile" name="Send-BoltFile.help.help has correct parameter type for Inventoryfile" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Send-BoltFile.help.help has correct parameter type for LogLevel" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Modulepath" name="Send-BoltFile.help.help has correct parameter type for Modulepath" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for NativeSsh" name="Send-BoltFile.help.help has correct parameter type for NativeSsh" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Password" name="Send-BoltFile.help.help has correct parameter type for Password" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for PasswordPrompt" name="Send-BoltFile.help.help has correct parameter type for PasswordPrompt" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for PrivateKey" name="Send-BoltFile.help.help has correct parameter type for PrivateKey" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Send-BoltFile.help.help has correct parameter type for Project" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Query" name="Send-BoltFile.help.help has correct parameter type for Query" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Rerun" name="Send-BoltFile.help.help has correct parameter type for Rerun" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for RunAs" name="Send-BoltFile.help.help has correct parameter type for RunAs" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SaveRerun" name="Send-BoltFile.help.help has correct parameter type for SaveRerun" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Source" name="Send-BoltFile.help.help has correct parameter type for Source" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SshCommand" name="Send-BoltFile.help.help has correct parameter type for SshCommand" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Ssl" name="Send-BoltFile.help.help has correct parameter type for Ssl" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SslVerify" name="Send-BoltFile.help.help has correct parameter type for SslVerify" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoExecutable" name="Send-BoltFile.help.help has correct parameter type for SudoExecutable" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoPassword" name="Send-BoltFile.help.help has correct parameter type for SudoPassword" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoPasswordPrompt" name="Send-BoltFile.help.help has correct parameter type for SudoPasswordPrompt" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Targets" name="Send-BoltFile.help.help has correct parameter type for Targets" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Tmpdir" name="Send-BoltFile.help.help has correct parameter type for Tmpdir" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Trace" name="Send-BoltFile.help.help has correct parameter type for Trace" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Transport" name="Send-BoltFile.help.help has correct parameter type for Transport" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for TTY" name="Send-BoltFile.help.help has correct parameter type for TTY" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for User" name="Send-BoltFile.help.help has correct parameter type for User" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Protect-BoltSecret" executed="True" result="Success" success="True" time="14.6267" asserts="0" description="Protect-BoltSecret">
            <results>
              <test-suite type="TestFixture" name="Protect-BoltSecret.parameters" executed="True" result="Success" success="True" time="0.087" asserts="0" description="Protect-BoltSecret.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Protect-BoltSecret.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Protect-BoltSecret.parameters.has correct parameters(Protect-BoltSecret)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Protect-BoltSecret.parameters.has a primary parameter" executed="True" result="Success" success="True" time="0.0224" asserts="0" description="has a primary parameter">
                    <results>
                      <test-case description="has a primary parameter" name="Protect-BoltSecret.parameters.has a primary parameter(Protect-BoltSecret)" time="0.0224" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Protect-BoltSecret.help" executed="True" result="Success" success="True" time="0.46" asserts="0" description="Protect-BoltSecret.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Protect-BoltSecret.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0184" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Protect-BoltSecret.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Protect-BoltSecret}}; details=@{description=System.Management.Automation.PSObject[]; name=Protect-BoltSecret}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Protect-BoltSecret; Category=Function; Synopsis=bolt secret encrypt &lt;plaintext&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Protect-BoltSecret.help.gets description" executed="True" result="Success" success="True" time="0.0168" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Protect-BoltSecret.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Protect-BoltSecret}}; details=@{description=System.Management.Automation.PSObject[]; name=Protect-BoltSecret}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Protect-BoltSecret; Category=Function; Synopsis=bolt secret encrypt &lt;plaintext&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Protect-BoltSecret.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Protect-BoltSecret.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Protect-BoltSecret}}; details=@{description=System.Management.Automation.PSObject[]; name=Protect-BoltSecret}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Protect-BoltSecret; Category=Function; Synopsis=bolt secret encrypt &lt;plaintext&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Protect-BoltSecret.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0921" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: ClearCache" name="Protect-BoltSecret.help.gets help for parameter: ClearCache" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Protect-BoltSecret.help.gets help for parameter: LogLevel" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Modulepath" name="Protect-BoltSecret.help.gets help for parameter: Modulepath" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Plugin" name="Protect-BoltSecret.help.gets help for parameter: Plugin" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Protect-BoltSecret.help.gets help for parameter: Project" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Text" name="Protect-BoltSecret.help.gets help for parameter: Text" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Protect-BoltSecret.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.1003" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for ClearCache has correct Mandatory value" name="Protect-BoltSecret.help.help for ClearCache has correct Mandatory value" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Protect-BoltSecret.help.help for LogLevel has correct Mandatory value" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Modulepath has correct Mandatory value" name="Protect-BoltSecret.help.help for Modulepath has correct Mandatory value" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Plugin has correct Mandatory value" name="Protect-BoltSecret.help.help for Plugin has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Protect-BoltSecret.help.help for Project has correct Mandatory value" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Text has correct Mandatory value" name="Protect-BoltSecret.help.help for Text has correct Mandatory value" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Protect-BoltSecret.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.1006" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for ClearCache" name="Protect-BoltSecret.help.help has correct parameter type for ClearCache" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Protect-BoltSecret.help.help has correct parameter type for LogLevel" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Modulepath" name="Protect-BoltSecret.help.help has correct parameter type for Modulepath" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Plugin" name="Protect-BoltSecret.help.help has correct parameter type for Plugin" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Protect-BoltSecret.help.help has correct parameter type for Project" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Text" name="Protect-BoltSecret.help.help has correct parameter type for Text" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Unprotect-BoltSecret" executed="True" result="Success" success="True" time="15.0906" asserts="0" description="Unprotect-BoltSecret">
            <results>
              <test-suite type="TestFixture" name="Unprotect-BoltSecret.parameters" executed="True" result="Success" success="True" time="0.078" asserts="0" description="Unprotect-BoltSecret.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Unprotect-BoltSecret.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Unprotect-BoltSecret.parameters.has correct parameters(Unprotect-BoltSecret)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Unprotect-BoltSecret.parameters.has a primary parameter" executed="True" result="Success" success="True" time="0.0199" asserts="0" description="has a primary parameter">
                    <results>
                      <test-case description="has a primary parameter" name="Unprotect-BoltSecret.parameters.has a primary parameter(Unprotect-BoltSecret)" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Unprotect-BoltSecret.help" executed="True" result="Success" success="True" time="0.4434" asserts="0" description="Unprotect-BoltSecret.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Unprotect-BoltSecret.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0174" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Unprotect-BoltSecret.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Unprotect-BoltSecret}}; details=@{description=System.Management.Automation.PSObject[]; name=Unprotect-BoltSecret}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Unprotect-BoltSecret; Category=Function; Synopsis=bolt secret decrypt &lt;ciphertext&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Unprotect-BoltSecret.help.gets description" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Unprotect-BoltSecret.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Unprotect-BoltSecret}}; details=@{description=System.Management.Automation.PSObject[]; name=Unprotect-BoltSecret}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Unprotect-BoltSecret; Category=Function; Synopsis=bolt secret decrypt &lt;ciphertext&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Unprotect-BoltSecret.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.013" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Unprotect-BoltSecret.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Unprotect-BoltSecret}}; details=@{description=System.Management.Automation.PSObject[]; name=Unprotect-BoltSecret}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Unprotect-BoltSecret; Category=Function; Synopsis=bolt secret decrypt &lt;ciphertext&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Unprotect-BoltSecret.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0915" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: ClearCache" name="Unprotect-BoltSecret.help.gets help for parameter: ClearCache" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Unprotect-BoltSecret.help.gets help for parameter: LogLevel" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Modulepath" name="Unprotect-BoltSecret.help.gets help for parameter: Modulepath" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Plugin" name="Unprotect-BoltSecret.help.gets help for parameter: Plugin" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Unprotect-BoltSecret.help.gets help for parameter: Project" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Text" name="Unprotect-BoltSecret.help.gets help for parameter: Text" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Unprotect-BoltSecret.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.1032" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for ClearCache has correct Mandatory value" name="Unprotect-BoltSecret.help.help for ClearCache has correct Mandatory value" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Unprotect-BoltSecret.help.help for LogLevel has correct Mandatory value" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Modulepath has correct Mandatory value" name="Unprotect-BoltSecret.help.help for Modulepath has correct Mandatory value" time="0.0206" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Plugin has correct Mandatory value" name="Unprotect-BoltSecret.help.help for Plugin has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Unprotect-BoltSecret.help.help for Project has correct Mandatory value" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Text has correct Mandatory value" name="Unprotect-BoltSecret.help.help for Text has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Unprotect-BoltSecret.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0969" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for ClearCache" name="Unprotect-BoltSecret.help.help has correct parameter type for ClearCache" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Unprotect-BoltSecret.help.help has correct parameter type for LogLevel" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Modulepath" name="Unprotect-BoltSecret.help.help has correct parameter type for Modulepath" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Plugin" name="Unprotect-BoltSecret.help.help has correct parameter type for Plugin" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Unprotect-BoltSecret.help.help has correct parameter type for Project" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Text" name="Unprotect-BoltSecret.help.help has correct parameter type for Text" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-BoltSecretKey" executed="True" result="Success" success="True" time="15.5453" asserts="0" description="New-BoltSecretKey">
            <results>
              <test-suite type="TestFixture" name="New-BoltSecretKey.parameters" executed="True" result="Success" success="True" time="0.0546" asserts="0" description="New-BoltSecretKey.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="New-BoltSecretKey.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.0352" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="New-BoltSecretKey.parameters.has correct parameters(New-BoltSecretKey)" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="New-BoltSecretKey.help" executed="True" result="Success" success="True" time="0.4348" asserts="0" description="New-BoltSecretKey.help">
                <results>
                  <test-suite type="ParameterizedTest" name="New-BoltSecretKey.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0171" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="New-BoltSecretKey.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=New-BoltSecretKey}}; details=@{description=System.Management.Automation.PSObject[]; name=New-BoltSecretKey}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=New-BoltSecretKey; Category=Function; Synopsis=bolt secret createkeys [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="New-BoltSecretKey.help.gets description" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="New-BoltSecretKey.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=New-BoltSecretKey}}; details=@{description=System.Management.Automation.PSObject[]; name=New-BoltSecretKey}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=New-BoltSecretKey; Category=Function; Synopsis=bolt secret createkeys [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="New-BoltSecretKey.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.016" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="New-BoltSecretKey.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=New-BoltSecretKey}}; details=@{description=System.Management.Automation.PSObject[]; name=New-BoltSecretKey}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=New-BoltSecretKey; Category=Function; Synopsis=bolt secret createkeys [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="New-BoltSecretKey.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.093" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: ClearCache" name="New-BoltSecretKey.help.gets help for parameter: ClearCache" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Force" name="New-BoltSecretKey.help.gets help for parameter: Force" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="New-BoltSecretKey.help.gets help for parameter: LogLevel" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Modulepath" name="New-BoltSecretKey.help.gets help for parameter: Modulepath" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Plugin" name="New-BoltSecretKey.help.gets help for parameter: Plugin" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="New-BoltSecretKey.help.gets help for parameter: Project" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="New-BoltSecretKey.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.1074" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for ClearCache has correct Mandatory value" name="New-BoltSecretKey.help.help for ClearCache has correct Mandatory value" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Force has correct Mandatory value" name="New-BoltSecretKey.help.help for Force has correct Mandatory value" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="New-BoltSecretKey.help.help for LogLevel has correct Mandatory value" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Modulepath has correct Mandatory value" name="New-BoltSecretKey.help.help for Modulepath has correct Mandatory value" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Plugin has correct Mandatory value" name="New-BoltSecretKey.help.help for Plugin has correct Mandatory value" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="New-BoltSecretKey.help.help for Project has correct Mandatory value" time="0.0189" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="New-BoltSecretKey.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.1068" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for ClearCache" name="New-BoltSecretKey.help.help has correct parameter type for ClearCache" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Force" name="New-BoltSecretKey.help.help has correct parameter type for Force" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="New-BoltSecretKey.help.help has correct parameter type for LogLevel" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Modulepath" name="New-BoltSecretKey.help.help has correct parameter type for Modulepath" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Plugin" name="New-BoltSecretKey.help.help has correct parameter type for Plugin" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="New-BoltSecretKey.help.help has correct parameter type for Project" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-BoltInventory" executed="True" result="Success" success="True" time="16.1665" asserts="0" description="Get-BoltInventory">
            <results>
              <test-suite type="TestFixture" name="Get-BoltInventory.parameters" executed="True" result="Success" success="True" time="0.0754" asserts="0" description="Get-BoltInventory.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Get-BoltInventory.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.0515" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Get-BoltInventory.parameters.has correct parameters(Get-BoltInventory)" time="0.0515" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Get-BoltInventory.help" executed="True" result="Success" success="True" time="0.6034" asserts="0" description="Get-BoltInventory.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Get-BoltInventory.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0187" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Get-BoltInventory.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Get-BoltInventory}}; details=@{description=System.Management.Automation.PSObject[]; name=Get-BoltInventory}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Get-BoltInventory; Category=Function; Synopsis=bolt inventory show [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0187" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltInventory.help.gets description" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Get-BoltInventory.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Get-BoltInventory}}; details=@{description=System.Management.Automation.PSObject[]; name=Get-BoltInventory}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Get-BoltInventory; Category=Function; Synopsis=bolt inventory show [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltInventory.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0184" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Get-BoltInventory.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Get-BoltInventory}}; details=@{description=System.Management.Automation.PSObject[]; name=Get-BoltInventory}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Get-BoltInventory; Category=Function; Synopsis=bolt inventory show [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltInventory.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.1373" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: ClearCache" name="Get-BoltInventory.help.gets help for parameter: ClearCache" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Detail" name="Get-BoltInventory.help.gets help for parameter: Detail" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Format" name="Get-BoltInventory.help.gets help for parameter: Format" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Inventoryfile" name="Get-BoltInventory.help.gets help for parameter: Inventoryfile" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Get-BoltInventory.help.gets help for parameter: LogLevel" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Get-BoltInventory.help.gets help for parameter: Project" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Query" name="Get-BoltInventory.help.gets help for parameter: Query" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Rerun" name="Get-BoltInventory.help.gets help for parameter: Rerun" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Targets" name="Get-BoltInventory.help.gets help for parameter: Targets" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltInventory.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.1557" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for ClearCache has correct Mandatory value" name="Get-BoltInventory.help.help for ClearCache has correct Mandatory value" time="0.0189" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Detail has correct Mandatory value" name="Get-BoltInventory.help.help for Detail has correct Mandatory value" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Format has correct Mandatory value" name="Get-BoltInventory.help.help for Format has correct Mandatory value" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Inventoryfile has correct Mandatory value" name="Get-BoltInventory.help.help for Inventoryfile has correct Mandatory value" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Get-BoltInventory.help.help for LogLevel has correct Mandatory value" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Get-BoltInventory.help.help for Project has correct Mandatory value" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Query has correct Mandatory value" name="Get-BoltInventory.help.help for Query has correct Mandatory value" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Rerun has correct Mandatory value" name="Get-BoltInventory.help.help for Rerun has correct Mandatory value" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Targets has correct Mandatory value" name="Get-BoltInventory.help.help for Targets has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltInventory.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.1538" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for ClearCache" name="Get-BoltInventory.help.help has correct parameter type for ClearCache" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Detail" name="Get-BoltInventory.help.help has correct parameter type for Detail" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Format" name="Get-BoltInventory.help.help has correct parameter type for Format" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Inventoryfile" name="Get-BoltInventory.help.help has correct parameter type for Inventoryfile" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Get-BoltInventory.help.help has correct parameter type for LogLevel" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Get-BoltInventory.help.help has correct parameter type for Project" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Query" name="Get-BoltInventory.help.help has correct parameter type for Query" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Rerun" name="Get-BoltInventory.help.help has correct parameter type for Rerun" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Targets" name="Get-BoltInventory.help.help has correct parameter type for Targets" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-BoltGroup" executed="True" result="Success" success="True" time="16.5405" asserts="0" description="Get-BoltGroup">
            <results>
              <test-suite type="TestFixture" name="Get-BoltGroup.parameters" executed="True" result="Success" success="True" time="0.0509" asserts="0" description="Get-BoltGroup.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Get-BoltGroup.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.0333" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Get-BoltGroup.parameters.has correct parameters(Get-BoltGroup)" time="0.0333" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Get-BoltGroup.help" executed="True" result="Success" success="True" time="0.3557" asserts="0" description="Get-BoltGroup.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Get-BoltGroup.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.017" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Get-BoltGroup.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Get-BoltGroup}}; details=@{description=System.Management.Automation.PSObject[]; name=Get-BoltGroup}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Get-BoltGroup; Category=Function; Synopsis=bolt group show [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltGroup.help.gets description" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Get-BoltGroup.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Get-BoltGroup}}; details=@{description=System.Management.Automation.PSObject[]; name=Get-BoltGroup}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Get-BoltGroup; Category=Function; Synopsis=bolt group show [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltGroup.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Get-BoltGroup.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Get-BoltGroup}}; details=@{description=System.Management.Automation.PSObject[]; name=Get-BoltGroup}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Get-BoltGroup; Category=Function; Synopsis=bolt group show [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltGroup.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0731" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: ClearCache" name="Get-BoltGroup.help.gets help for parameter: ClearCache" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Format" name="Get-BoltGroup.help.gets help for parameter: Format" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Inventoryfile" name="Get-BoltGroup.help.gets help for parameter: Inventoryfile" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Get-BoltGroup.help.gets help for parameter: LogLevel" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Get-BoltGroup.help.gets help for parameter: Project" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltGroup.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.0786" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for ClearCache has correct Mandatory value" name="Get-BoltGroup.help.help for ClearCache has correct Mandatory value" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Format has correct Mandatory value" name="Get-BoltGroup.help.help for Format has correct Mandatory value" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Inventoryfile has correct Mandatory value" name="Get-BoltGroup.help.help for Inventoryfile has correct Mandatory value" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Get-BoltGroup.help.help for LogLevel has correct Mandatory value" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Get-BoltGroup.help.help for Project has correct Mandatory value" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltGroup.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0814" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for ClearCache" name="Get-BoltGroup.help.help has correct parameter type for ClearCache" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Format" name="Get-BoltGroup.help.help has correct parameter type for Format" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Inventoryfile" name="Get-BoltGroup.help.help has correct parameter type for Inventoryfile" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Get-BoltGroup.help.help has correct parameter type for LogLevel" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Get-BoltGroup.help.help has correct parameter type for Project" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-BoltProject" executed="True" result="Success" success="True" time="16.8654" asserts="0" description="New-BoltProject">
            <results>
              <test-suite type="TestFixture" name="New-BoltProject.parameters" executed="True" result="Success" success="True" time="0.0492" asserts="0" description="New-BoltProject.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="New-BoltProject.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.0275" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="New-BoltProject.parameters.has correct parameters(New-BoltProject)" time="0.0275" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="New-BoltProject.help" executed="True" result="Success" success="True" time="0.3075" asserts="0" description="New-BoltProject.help">
                <results>
                  <test-suite type="ParameterizedTest" name="New-BoltProject.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0173" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="New-BoltProject.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=New-BoltProject}}; details=@{description=System.Management.Automation.PSObject[]; name=New-BoltProject}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=New-BoltProject; Category=Function; Synopsis=bolt project init [name] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="New-BoltProject.help.gets description" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="New-BoltProject.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=New-BoltProject}}; details=@{description=System.Management.Automation.PSObject[]; name=New-BoltProject}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=New-BoltProject; Category=Function; Synopsis=bolt project init [name] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="New-BoltProject.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.015" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="New-BoltProject.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=New-BoltProject}}; details=@{description=System.Management.Automation.PSObject[]; name=New-BoltProject}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=New-BoltProject; Category=Function; Synopsis=bolt project init [name] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="New-BoltProject.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0558" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: ClearCache" name="New-BoltProject.help.gets help for parameter: ClearCache" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="New-BoltProject.help.gets help for parameter: LogLevel" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Modules" name="New-BoltProject.help.gets help for parameter: Modules" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Name" name="New-BoltProject.help.gets help for parameter: Name" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="New-BoltProject.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.0652" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for ClearCache has correct Mandatory value" name="New-BoltProject.help.help for ClearCache has correct Mandatory value" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="New-BoltProject.help.help for LogLevel has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Modules has correct Mandatory value" name="New-BoltProject.help.help for Modules has correct Mandatory value" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Name has correct Mandatory value" name="New-BoltProject.help.help for Name has correct Mandatory value" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="New-BoltProject.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0671" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for ClearCache" name="New-BoltProject.help.help has correct parameter type for ClearCache" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="New-BoltProject.help.help has correct parameter type for LogLevel" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Modules" name="New-BoltProject.help.help has correct parameter type for Modules" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Name" name="New-BoltProject.help.help has correct parameter type for Name" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Update-BoltProject" executed="True" result="Success" success="True" time="17.4363" asserts="0" description="Update-BoltProject">
            <results>
              <test-suite type="TestFixture" name="Update-BoltProject.parameters" executed="True" result="Success" success="True" time="0.0507" asserts="0" description="Update-BoltProject.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Update-BoltProject.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.028" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Update-BoltProject.parameters.has correct parameters(Update-BoltProject)" time="0.028" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Update-BoltProject.help" executed="True" result="Success" success="True" time="0.5534" asserts="0" description="Update-BoltProject.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Update-BoltProject.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0174" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Update-BoltProject.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Update-BoltProject}}; details=@{description=System.Management.Automation.PSObject[]; name=Update-BoltProject}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Update-BoltProject; Category=Function; Synopsis=bolt project migrate [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Update-BoltProject.help.gets description" executed="True" result="Success" success="True" time="0.0146" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Update-BoltProject.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Update-BoltProject}}; details=@{description=System.Management.Automation.PSObject[]; name=Update-BoltProject}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Update-BoltProject; Category=Function; Synopsis=bolt project migrate [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Update-BoltProject.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Update-BoltProject.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Update-BoltProject}}; details=@{description=System.Management.Automation.PSObject[]; name=Update-BoltProject}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Update-BoltProject; Category=Function; Synopsis=bolt project migrate [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Update-BoltProject.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.1439" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: ClearCache" name="Update-BoltProject.help.gets help for parameter: ClearCache" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Inventoryfile" name="Update-BoltProject.help.gets help for parameter: Inventoryfile" time="0.0875" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Update-BoltProject.help.gets help for parameter: LogLevel" time="0.0207" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Update-BoltProject.help.gets help for parameter: Project" time="0.0201" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Update-BoltProject.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.1281" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for ClearCache has correct Mandatory value" name="Update-BoltProject.help.help for ClearCache has correct Mandatory value" time="0.0482" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Inventoryfile has correct Mandatory value" name="Update-BoltProject.help.help for Inventoryfile has correct Mandatory value" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Update-BoltProject.help.help for LogLevel has correct Mandatory value" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Update-BoltProject.help.help for Project has correct Mandatory value" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Update-BoltProject.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.1575" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for ClearCache" name="Update-BoltProject.help.help has correct parameter type for ClearCache" time="0.0911" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Inventoryfile" name="Update-BoltProject.help.help has correct parameter type for Inventoryfile" time="0.0257" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Update-BoltProject.help.help has correct parameter type for LogLevel" time="0.0219" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Update-BoltProject.help.help has correct parameter type for Project" time="0.0189" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Add-BoltModule" executed="True" result="Success" success="True" time="17.8774" asserts="0" description="Add-BoltModule">
            <results>
              <test-suite type="TestFixture" name="Add-BoltModule.parameters" executed="True" result="Success" success="True" time="0.0683" asserts="0" description="Add-BoltModule.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Add-BoltModule.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.0271" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Add-BoltModule.parameters.has correct parameters(Add-BoltModule)" time="0.0271" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Add-BoltModule.parameters.has a primary parameter" executed="True" result="Success" success="True" time="0.0199" asserts="0" description="has a primary parameter">
                    <results>
                      <test-case description="has a primary parameter" name="Add-BoltModule.parameters.has a primary parameter(Add-BoltModule)" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Add-BoltModule.help" executed="True" result="Success" success="True" time="0.4179" asserts="0" description="Add-BoltModule.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Add-BoltModule.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0175" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Add-BoltModule.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Add-BoltModule}}; details=@{description=System.Management.Automation.PSObject[]; name=Add-BoltModule}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Add-BoltModule; Category=Function; Synopsis=bolt module add &lt;module&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Add-BoltModule.help.gets description" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Add-BoltModule.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Add-BoltModule}}; details=@{description=System.Management.Automation.PSObject[]; name=Add-BoltModule}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Add-BoltModule; Category=Function; Synopsis=bolt module add &lt;module&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Add-BoltModule.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Add-BoltModule.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Add-BoltModule}}; details=@{description=System.Management.Automation.PSObject[]; name=Add-BoltModule}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Add-BoltModule; Category=Function; Synopsis=bolt module add &lt;module&gt; [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Add-BoltModule.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0661" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: ClearCache" name="Add-BoltModule.help.gets help for parameter: ClearCache" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Add-BoltModule.help.gets help for parameter: LogLevel" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Module" name="Add-BoltModule.help.gets help for parameter: Module" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Add-BoltModule.help.gets help for parameter: Project" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Add-BoltModule.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.0723" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for ClearCache has correct Mandatory value" name="Add-BoltModule.help.help for ClearCache has correct Mandatory value" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Add-BoltModule.help.help for LogLevel has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Module has correct Mandatory value" name="Add-BoltModule.help.help for Module has correct Mandatory value" time="0.0197" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Add-BoltModule.help.help for Project has correct Mandatory value" time="0.0197" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Add-BoltModule.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.1007" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for ClearCache" name="Add-BoltModule.help.help has correct parameter type for ClearCache" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Add-BoltModule.help.help has correct parameter type for LogLevel" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Module" name="Add-BoltModule.help.help has correct parameter type for Module" time="0.0358" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Add-BoltModule.help.help has correct parameter type for Project" time="0.0307" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Register-BoltModuleTypes" executed="True" result="Success" success="True" time="18.2699" asserts="0" description="Register-BoltModuleTypes">
            <results>
              <test-suite type="TestFixture" name="Register-BoltModuleTypes.parameters" executed="True" result="Success" success="True" time="0.0844" asserts="0" description="Register-BoltModuleTypes.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Register-BoltModuleTypes.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Register-BoltModuleTypes.parameters.has correct parameters(Register-BoltModuleTypes)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Register-BoltModuleTypes.help" executed="True" result="Success" success="True" time="0.355" asserts="0" description="Register-BoltModuleTypes.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Register-BoltModuleTypes.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0215" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Register-BoltModuleTypes.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Register-BoltModuleTypes}}; details=@{description=System.Management.Automation.PSObject[]; name=Register-BoltModuleTypes}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Register-BoltModuleTypes; Category=Function; Synopsis=bolt module generate-types [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Register-BoltModuleTypes.help.gets description" executed="True" result="Success" success="True" time="0.0171" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Register-BoltModuleTypes.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Register-BoltModuleTypes}}; details=@{description=System.Management.Automation.PSObject[]; name=Register-BoltModuleTypes}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Register-BoltModuleTypes; Category=Function; Synopsis=bolt module generate-types [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Register-BoltModuleTypes.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0172" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Register-BoltModuleTypes.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Register-BoltModuleTypes}}; details=@{description=System.Management.Automation.PSObject[]; name=Register-BoltModuleTypes}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Register-BoltModuleTypes; Category=Function; Synopsis=bolt module generate-types [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Register-BoltModuleTypes.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0568" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: ClearCache" name="Register-BoltModuleTypes.help.gets help for parameter: ClearCache" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Register-BoltModuleTypes.help.gets help for parameter: LogLevel" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Modulepath" name="Register-BoltModuleTypes.help.gets help for parameter: Modulepath" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Register-BoltModuleTypes.help.gets help for parameter: Project" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Register-BoltModuleTypes.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.0664" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for ClearCache has correct Mandatory value" name="Register-BoltModuleTypes.help.help for ClearCache has correct Mandatory value" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Register-BoltModuleTypes.help.help for LogLevel has correct Mandatory value" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Modulepath has correct Mandatory value" name="Register-BoltModuleTypes.help.help for Modulepath has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Register-BoltModuleTypes.help.help for Project has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Register-BoltModuleTypes.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0673" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for ClearCache" name="Register-BoltModuleTypes.help.help has correct parameter type for ClearCache" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Register-BoltModuleTypes.help.help has correct parameter type for LogLevel" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Modulepath" name="Register-BoltModuleTypes.help.help has correct parameter type for Modulepath" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Register-BoltModuleTypes.help.help has correct parameter type for Project" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Install-BoltModule" executed="True" result="Success" success="True" time="18.6726" asserts="0" description="Install-BoltModule">
            <results>
              <test-suite type="TestFixture" name="Install-BoltModule.parameters" executed="True" result="Success" success="True" time="0.0582" asserts="0" description="Install-BoltModule.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Install-BoltModule.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Install-BoltModule.parameters.has correct parameters(Install-BoltModule)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Install-BoltModule.help" executed="True" result="Success" success="True" time="0.3837" asserts="0" description="Install-BoltModule.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Install-BoltModule.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.017" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Install-BoltModule.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Install-BoltModule}}; details=@{description=System.Management.Automation.PSObject[]; name=Install-BoltModule}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Install-BoltModule; Category=Function; Synopsis=bolt module install [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Install-BoltModule.help.gets description" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Install-BoltModule.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Install-BoltModule}}; details=@{description=System.Management.Automation.PSObject[]; name=Install-BoltModule}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Install-BoltModule; Category=Function; Synopsis=bolt module install [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Install-BoltModule.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Install-BoltModule.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Install-BoltModule}}; details=@{description=System.Management.Automation.PSObject[]; name=Install-BoltModule}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Install-BoltModule; Category=Function; Synopsis=bolt module install [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Install-BoltModule.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0777" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: ClearCache" name="Install-BoltModule.help.gets help for parameter: ClearCache" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Force" name="Install-BoltModule.help.gets help for parameter: Force" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Install-BoltModule.help.gets help for parameter: LogLevel" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Install-BoltModule.help.gets help for parameter: Project" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Resolve" name="Install-BoltModule.help.gets help for parameter: Resolve" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Install-BoltModule.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.0865" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for ClearCache has correct Mandatory value" name="Install-BoltModule.help.help for ClearCache has correct Mandatory value" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Force has correct Mandatory value" name="Install-BoltModule.help.help for Force has correct Mandatory value" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Install-BoltModule.help.help for LogLevel has correct Mandatory value" time="0.019" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Install-BoltModule.help.help for Project has correct Mandatory value" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Resolve has correct Mandatory value" name="Install-BoltModule.help.help for Resolve has correct Mandatory value" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Install-BoltModule.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0893" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for ClearCache" name="Install-BoltModule.help.help has correct parameter type for ClearCache" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Force" name="Install-BoltModule.help.help has correct parameter type for Force" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Install-BoltModule.help.help has correct parameter type for LogLevel" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Install-BoltModule.help.help has correct parameter type for Project" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Resolve" name="Install-BoltModule.help.help has correct parameter type for Resolve" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-BoltModule" executed="True" result="Success" success="True" time="19.0207" asserts="0" description="Get-BoltModule">
            <results>
              <test-suite type="TestFixture" name="Get-BoltModule.parameters" executed="True" result="Success" success="True" time="0.0518" asserts="0" description="Get-BoltModule.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Get-BoltModule.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.0285" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Get-BoltModule.parameters.has correct parameters(Get-BoltModule)" time="0.0285" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Get-BoltModule.help" executed="True" result="Success" success="True" time="0.3304" asserts="0" description="Get-BoltModule.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Get-BoltModule.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0173" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Get-BoltModule.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Get-BoltModule}}; details=@{description=System.Management.Automation.PSObject[]; name=Get-BoltModule}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Get-BoltModule; Category=Function; Synopsis=bolt module show [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltModule.help.gets description" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Get-BoltModule.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Get-BoltModule}}; details=@{description=System.Management.Automation.PSObject[]; name=Get-BoltModule}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Get-BoltModule; Category=Function; Synopsis=bolt module show [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltModule.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Get-BoltModule.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Get-BoltModule}}; details=@{description=System.Management.Automation.PSObject[]; name=Get-BoltModule}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Get-BoltModule; Category=Function; Synopsis=bolt module show [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltModule.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0675" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: ClearCache" name="Get-BoltModule.help.gets help for parameter: ClearCache" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Get-BoltModule.help.gets help for parameter: LogLevel" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Modulepath" name="Get-BoltModule.help.gets help for parameter: Modulepath" time="0.0256" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Get-BoltModule.help.gets help for parameter: Project" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltModule.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.0727" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for ClearCache has correct Mandatory value" name="Get-BoltModule.help.help for ClearCache has correct Mandatory value" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Get-BoltModule.help.help for LogLevel has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Modulepath has correct Mandatory value" name="Get-BoltModule.help.help for Modulepath has correct Mandatory value" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Get-BoltModule.help.help for Project has correct Mandatory value" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Get-BoltModule.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.0674" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for ClearCache" name="Get-BoltModule.help.help has correct parameter type for ClearCache" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Get-BoltModule.help.help has correct parameter type for LogLevel" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Modulepath" name="Get-BoltModule.help.help has correct parameter type for Modulepath" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Get-BoltModule.help.help has correct parameter type for Project" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Invoke-BoltApply" executed="True" result="Success" success="True" time="21.1644" asserts="0" description="Invoke-BoltApply">
            <results>
              <test-suite type="TestFixture" name="Invoke-BoltApply.parameters" executed="True" result="Success" success="True" time="0.2263" asserts="0" description="Invoke-BoltApply.parameters">
                <results>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltApply.parameters.has correct parameters" executed="True" result="Success" success="True" time="0.1635" asserts="0" description="has correct parameters">
                    <results>
                      <test-case description="has correct parameters" name="Invoke-BoltApply.parameters.has correct parameters(Invoke-BoltApply)" time="0.1635" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltApply.parameters.has a primary parameter" executed="True" result="Success" success="True" time="0.0211" asserts="0" description="has a primary parameter">
                    <results>
                      <test-case description="has a primary parameter" name="Invoke-BoltApply.parameters.has a primary parameter(Invoke-BoltApply)" time="0.0211" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltApply.parameters.has a primary parameter" executed="True" result="Success" success="True" time="0.0199" asserts="0" description="has a primary parameter">
                    <results>
                      <test-case description="has a primary parameter" name="Invoke-BoltApply.parameters.has a primary parameter(Invoke-BoltApply)" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-BoltApply.help" executed="True" result="Success" success="True" time="2.1218" asserts="0" description="Invoke-BoltApply.help">
                <results>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltApply.help.should not be auto-generated" executed="True" result="Success" success="True" time="0.0171" asserts="0" description="should not be auto-generated">
                    <results>
                      <test-case description="should not be auto-generated" name="Invoke-BoltApply.help.should not be auto-generated(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=System.Management.Automation.PSObject[]}; details=@{description=System.Management.Automation.PSObject[]; name=Invoke-BoltApply}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Invoke-BoltApply; Category=Function; Synopsis=bolt apply [manifest.pp] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltApply.help.gets description" executed="True" result="Success" success="True" time="0.0127" asserts="0" description="gets description">
                    <results>
                      <test-case description="gets description" name="Invoke-BoltApply.help.gets description(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=System.Management.Automation.PSObject[]}; details=@{description=System.Management.Automation.PSObject[]; name=Invoke-BoltApply}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Invoke-BoltApply; Category=Function; Synopsis=bolt apply [manifest.pp] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltApply.help.gets relatedLinks" executed="True" result="Success" success="True" time="0.015" asserts="0" description="gets relatedLinks">
                    <results>
                      <test-case description="gets relatedLinks" name="Invoke-BoltApply.help.gets relatedLinks(@{description=System.Management.Automation.PSObject[]; syntax=@{syntaxItem=System.Management.Automation.PSObject[]}; details=@{description=System.Management.Automation.PSObject[]; name=Invoke-BoltApply}; parameters=@{parameter=System.Management.Automation.PSObject[]}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Invoke-BoltApply; Category=Function; Synopsis=bolt apply [manifest.pp] [options]; Component=; Role=; Functionality=; ModuleName=PuppetBolt})" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltApply.help.gets help for parameter: &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.5612" asserts="0" description="gets help for parameter: &lt;parameterName&gt;">
                    <results>
                      <test-case description="gets help for parameter: Cleanup" name="Invoke-BoltApply.help.gets help for parameter: Cleanup" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: ClearCache" name="Invoke-BoltApply.help.gets help for parameter: ClearCache" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Color" name="Invoke-BoltApply.help.gets help for parameter: Color" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: CompileConcurrency" name="Invoke-BoltApply.help.gets help for parameter: CompileConcurrency" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Concurrency" name="Invoke-BoltApply.help.gets help for parameter: Concurrency" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: ConnectTimeout" name="Invoke-BoltApply.help.gets help for parameter: ConnectTimeout" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: CopyCommand" name="Invoke-BoltApply.help.gets help for parameter: CopyCommand" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Execute" name="Invoke-BoltApply.help.gets help for parameter: Execute" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Format" name="Invoke-BoltApply.help.gets help for parameter: Format" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: HieraConfig" name="Invoke-BoltApply.help.gets help for parameter: HieraConfig" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: HostKeyCheck" name="Invoke-BoltApply.help.gets help for parameter: HostKeyCheck" time="0.0193" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Inventoryfile" name="Invoke-BoltApply.help.gets help for parameter: Inventoryfile" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: LogLevel" name="Invoke-BoltApply.help.gets help for parameter: LogLevel" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Manifest" name="Invoke-BoltApply.help.gets help for parameter: Manifest" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Modulepath" name="Invoke-BoltApply.help.gets help for parameter: Modulepath" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: NativeSsh" name="Invoke-BoltApply.help.gets help for parameter: NativeSsh" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Noop" name="Invoke-BoltApply.help.gets help for parameter: Noop" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Password" name="Invoke-BoltApply.help.gets help for parameter: Password" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: PasswordPrompt" name="Invoke-BoltApply.help.gets help for parameter: PasswordPrompt" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: PrivateKey" name="Invoke-BoltApply.help.gets help for parameter: PrivateKey" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Project" name="Invoke-BoltApply.help.gets help for parameter: Project" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Query" name="Invoke-BoltApply.help.gets help for parameter: Query" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Rerun" name="Invoke-BoltApply.help.gets help for parameter: Rerun" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: RunAs" name="Invoke-BoltApply.help.gets help for parameter: RunAs" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SaveRerun" name="Invoke-BoltApply.help.gets help for parameter: SaveRerun" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SshCommand" name="Invoke-BoltApply.help.gets help for parameter: SshCommand" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Ssl" name="Invoke-BoltApply.help.gets help for parameter: Ssl" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SslVerify" name="Invoke-BoltApply.help.gets help for parameter: SslVerify" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoExecutable" name="Invoke-BoltApply.help.gets help for parameter: SudoExecutable" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoPassword" name="Invoke-BoltApply.help.gets help for parameter: SudoPassword" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: SudoPasswordPrompt" name="Invoke-BoltApply.help.gets help for parameter: SudoPasswordPrompt" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Targets" name="Invoke-BoltApply.help.gets help for parameter: Targets" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Trace" name="Invoke-BoltApply.help.gets help for parameter: Trace" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: Transport" name="Invoke-BoltApply.help.gets help for parameter: Transport" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: TTY" name="Invoke-BoltApply.help.gets help for parameter: TTY" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="gets help for parameter: User" name="Invoke-BoltApply.help.gets help for parameter: User" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltApply.help.help for &lt;parametername&gt; has correct Mandatory value" executed="True" result="Success" success="True" time="0.6132" asserts="0" description="help for &lt;parametername&gt; has correct Mandatory value">
                    <results>
                      <test-case description="help for Cleanup has correct Mandatory value" name="Invoke-BoltApply.help.help for Cleanup has correct Mandatory value" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for ClearCache has correct Mandatory value" name="Invoke-BoltApply.help.help for ClearCache has correct Mandatory value" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Color has correct Mandatory value" name="Invoke-BoltApply.help.help for Color has correct Mandatory value" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for CompileConcurrency has correct Mandatory value" name="Invoke-BoltApply.help.help for CompileConcurrency has correct Mandatory value" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Concurrency has correct Mandatory value" name="Invoke-BoltApply.help.help for Concurrency has correct Mandatory value" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for ConnectTimeout has correct Mandatory value" name="Invoke-BoltApply.help.help for ConnectTimeout has correct Mandatory value" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for CopyCommand has correct Mandatory value" name="Invoke-BoltApply.help.help for CopyCommand has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Execute has correct Mandatory value" name="Invoke-BoltApply.help.help for Execute has correct Mandatory value" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Format has correct Mandatory value" name="Invoke-BoltApply.help.help for Format has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for HieraConfig has correct Mandatory value" name="Invoke-BoltApply.help.help for HieraConfig has correct Mandatory value" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for HostKeyCheck has correct Mandatory value" name="Invoke-BoltApply.help.help for HostKeyCheck has correct Mandatory value" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Inventoryfile has correct Mandatory value" name="Invoke-BoltApply.help.help for Inventoryfile has correct Mandatory value" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for LogLevel has correct Mandatory value" name="Invoke-BoltApply.help.help for LogLevel has correct Mandatory value" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Manifest has correct Mandatory value" name="Invoke-BoltApply.help.help for Manifest has correct Mandatory value" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Modulepath has correct Mandatory value" name="Invoke-BoltApply.help.help for Modulepath has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for NativeSsh has correct Mandatory value" name="Invoke-BoltApply.help.help for NativeSsh has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Noop has correct Mandatory value" name="Invoke-BoltApply.help.help for Noop has correct Mandatory value" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Password has correct Mandatory value" name="Invoke-BoltApply.help.help for Password has correct Mandatory value" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for PasswordPrompt has correct Mandatory value" name="Invoke-BoltApply.help.help for PasswordPrompt has correct Mandatory value" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for PrivateKey has correct Mandatory value" name="Invoke-BoltApply.help.help for PrivateKey has correct Mandatory value" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Project has correct Mandatory value" name="Invoke-BoltApply.help.help for Project has correct Mandatory value" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Query has correct Mandatory value" name="Invoke-BoltApply.help.help for Query has correct Mandatory value" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Rerun has correct Mandatory value" name="Invoke-BoltApply.help.help for Rerun has correct Mandatory value" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for RunAs has correct Mandatory value" name="Invoke-BoltApply.help.help for RunAs has correct Mandatory value" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SaveRerun has correct Mandatory value" name="Invoke-BoltApply.help.help for SaveRerun has correct Mandatory value" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SshCommand has correct Mandatory value" name="Invoke-BoltApply.help.help for SshCommand has correct Mandatory value" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Ssl has correct Mandatory value" name="Invoke-BoltApply.help.help for Ssl has correct Mandatory value" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SslVerify has correct Mandatory value" name="Invoke-BoltApply.help.help for SslVerify has correct Mandatory value" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoExecutable has correct Mandatory value" name="Invoke-BoltApply.help.help for SudoExecutable has correct Mandatory value" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoPassword has correct Mandatory value" name="Invoke-BoltApply.help.help for SudoPassword has correct Mandatory value" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for SudoPasswordPrompt has correct Mandatory value" name="Invoke-BoltApply.help.help for SudoPasswordPrompt has correct Mandatory value" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Targets has correct Mandatory value" name="Invoke-BoltApply.help.help for Targets has correct Mandatory value" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Trace has correct Mandatory value" name="Invoke-BoltApply.help.help for Trace has correct Mandatory value" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for Transport has correct Mandatory value" name="Invoke-BoltApply.help.help for Transport has correct Mandatory value" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for TTY has correct Mandatory value" name="Invoke-BoltApply.help.help for TTY has correct Mandatory value" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help for User has correct Mandatory value" name="Invoke-BoltApply.help.help for User has correct Mandatory value" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Invoke-BoltApply.help.help has correct parameter type for &lt;parameterName&gt;" executed="True" result="Success" success="True" time="0.623" asserts="0" description="help has correct parameter type for &lt;parameterName&gt;">
                    <results>
                      <test-case description="help has correct parameter type for Cleanup" name="Invoke-BoltApply.help.help has correct parameter type for Cleanup" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for ClearCache" name="Invoke-BoltApply.help.help has correct parameter type for ClearCache" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Color" name="Invoke-BoltApply.help.help has correct parameter type for Color" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for CompileConcurrency" name="Invoke-BoltApply.help.help has correct parameter type for CompileConcurrency" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Concurrency" name="Invoke-BoltApply.help.help has correct parameter type for Concurrency" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for ConnectTimeout" name="Invoke-BoltApply.help.help has correct parameter type for ConnectTimeout" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for CopyCommand" name="Invoke-BoltApply.help.help has correct parameter type for CopyCommand" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Execute" name="Invoke-BoltApply.help.help has correct parameter type for Execute" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Format" name="Invoke-BoltApply.help.help has correct parameter type for Format" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for HieraConfig" name="Invoke-BoltApply.help.help has correct parameter type for HieraConfig" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for HostKeyCheck" name="Invoke-BoltApply.help.help has correct parameter type for HostKeyCheck" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Inventoryfile" name="Invoke-BoltApply.help.help has correct parameter type for Inventoryfile" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for LogLevel" name="Invoke-BoltApply.help.help has correct parameter type for LogLevel" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Manifest" name="Invoke-BoltApply.help.help has correct parameter type for Manifest" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Modulepath" name="Invoke-BoltApply.help.help has correct parameter type for Modulepath" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for NativeSsh" name="Invoke-BoltApply.help.help has correct parameter type for NativeSsh" time="0.0187" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Noop" name="Invoke-BoltApply.help.help has correct parameter type for Noop" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Password" name="Invoke-BoltApply.help.help has correct parameter type for Password" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for PasswordPrompt" name="Invoke-BoltApply.help.help has correct parameter type for PasswordPrompt" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for PrivateKey" name="Invoke-BoltApply.help.help has correct parameter type for PrivateKey" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Project" name="Invoke-BoltApply.help.help has correct parameter type for Project" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Query" name="Invoke-BoltApply.help.help has correct parameter type for Query" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Rerun" name="Invoke-BoltApply.help.help has correct parameter type for Rerun" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for RunAs" name="Invoke-BoltApply.help.help has correct parameter type for RunAs" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SaveRerun" name="Invoke-BoltApply.help.help has correct parameter type for SaveRerun" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SshCommand" name="Invoke-BoltApply.help.help has correct parameter type for SshCommand" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Ssl" name="Invoke-BoltApply.help.help has correct parameter type for Ssl" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SslVerify" name="Invoke-BoltApply.help.help has correct parameter type for SslVerify" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoExecutable" name="Invoke-BoltApply.help.help has correct parameter type for SudoExecutable" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoPassword" name="Invoke-BoltApply.help.help has correct parameter type for SudoPassword" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for SudoPasswordPrompt" name="Invoke-BoltApply.help.help has correct parameter type for SudoPasswordPrompt" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Targets" name="Invoke-BoltApply.help.help has correct parameter type for Targets" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Trace" name="Invoke-BoltApply.help.help has correct parameter type for Trace" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for Transport" name="Invoke-BoltApply.help.help has correct parameter type for Transport" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for TTY" name="Invoke-BoltApply.help.help has correct parameter type for TTY" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="help has correct parameter type for User" name="Invoke-BoltApply.help.help has correct parameter type for User" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/home/mcdonaldseanp/Workspace/orchestration/bolt/pwsh_module/command.tests.ps1" executed="True" result="Failure" success="False" time="1.8188" asserts="0" description="/home/mcdonaldseanp/Workspace/orchestration/bolt/pwsh_module/command.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="test bolt module" executed="True" result="Success" success="True" time="0.124" asserts="0" description="test bolt module">
            <results>
              <test-suite type="TestFixture" name="test bolt module.valid manifest" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="test bolt module.valid manifest">
                <results>
                  <test-case description="has a valid manifest" name="test bolt module.valid manifest.has a valid manifest" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="test bolt module.bolt module setup" executed="True" result="Success" success="True" time="0.0961" asserts="0" description="test bolt module.bolt module setup">
                <results>
                  <test-case description="has the correct number of exported functions" name="test bolt module.bolt module setup.has the correct number of exported functions" time="0.024" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="test bolt command syntax" executed="True" result="Success" success="True" time="0.4284" asserts="0" description="test bolt command syntax">
            <results>
              <test-suite type="TestFixture" name="test bolt command syntax.bolt apply" executed="True" result="Success" success="True" time="0.0828" asserts="0" description="test bolt command syntax.bolt apply">
                <results>
                  <test-case description="has primary parameter" name="test bolt command syntax.bolt apply.has primary parameter" time="0.0267" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has correct number of parameters" name="test bolt command syntax.bolt apply.has correct number of parameters" time="0.031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="test bolt command syntax.bolt command" executed="True" result="Success" success="True" time="0.1621" asserts="0" description="test bolt command syntax.bolt command">
                <results>
                  <test-case description="has primary parameter" name="test bolt command syntax.bolt command.has primary parameter" time="0.0327" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has correct number of parameters" name="test bolt command syntax.bolt command.has correct number of parameters" time="0.0254" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="test bolt command syntax.boltfile" executed="True" result="Success" success="True" time="0.2458" asserts="0" description="test bolt command syntax.boltfile">
                <results>
                  <test-case description="has primary parameter" name="test bolt command syntax.boltfile.has primary parameter" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has correct number of parameters" name="test bolt command syntax.boltfile.has correct number of parameters" time="0.0284" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="test bolt command syntax.boltinventory" executed="True" result="Success" success="True" time="0.2862" asserts="0" description="test bolt command syntax.boltinventory">
                <results>
                  <test-case description="has correct number of parameters" name="test bolt command syntax.boltinventory.has correct number of parameters" time="0.0223" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="test all bolt command examples" executed="True" result="Failure" success="False" time="1.6039" asserts="0" description="test all bolt command examples">
            <results>
              <test-suite type="TestFixture" name="test all bolt command examples.bolt apply" executed="True" result="Success" success="True" time="0.1359" asserts="0" description="test all bolt command examples.bolt apply">
                <results>
                  <test-case description="bolt apply manifest.pp -t target" name="test all bolt command examples.bolt apply.bolt apply manifest.pp -t target" time="0.0838" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="bolt apply -e &quot;file { '/etc/puppetlabs': ensure =&gt; present }&quot; -t target" name="test all bolt command examples.bolt apply.bolt apply -e &quot;file { '/etc/puppetlabs': ensure =&gt; present }&quot; -t target" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="test all bolt command examples.bolt command" executed="True" result="Success" success="True" time="0.2172" asserts="0" description="test all bolt command examples.bolt command">
                <results>
                  <test-case description="bolt command run 'uptime' -t target1,target2" name="test all bolt command examples.bolt command.bolt command run 'uptime' -t target1,target2" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="bolt command run complicated quoting" name="test all bolt command examples.bolt command.bolt command run complicated quoting" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="test all bolt command examples.bolt file upload" executed="True" result="Success" success="True" time="0.2761" asserts="0" description="test all bolt command examples.bolt file upload">
                <results>
                  <test-case description="bolt file upload /tmp/source /etc/profile.d/login.sh -t target1" name="test all bolt command examples.bolt file upload.bolt file upload /tmp/source /etc/profile.d/login.sh -t target1" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="test all bolt command examples.bolt file download" executed="True" result="Success" success="True" time="0.3314" asserts="0" description="test all bolt command examples.bolt file download">
                <results>
                  <test-case description="bolt file download /etc/profile.d/login.sh login_script -t target1" name="test all bolt command examples.bolt file download.bolt file download /etc/profile.d/login.sh login_script -t target1" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="test all bolt command examples.bolt group" executed="True" result="Success" success="True" time="0.3758" asserts="0" description="test all bolt command examples.bolt group">
                <results>
                  <test-case description="bolt group show" name="test all bolt command examples.bolt group.bolt group show" time="0.0253" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="test all bolt command examples.bolt inventory" executed="True" result="Success" success="True" time="0.4193" asserts="0" description="test all bolt command examples.bolt inventory">
                <results>
                  <test-case description="bolt inventory show" name="test all bolt command examples.bolt inventory.bolt inventory show" time="0.0245" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="test all bolt command examples.bolt plan" executed="True" result="Failure" success="False" time="0.689" asserts="0" description="test all bolt command examples.bolt plan">
                <results>
                  <test-case description="bolt plan show" name="test all bolt command examples.bolt plan.bolt plan show" time="0.0312" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="bolt plan show aggregate::count" name="test all bolt command examples.bolt plan.bolt plan show aggregate::count" time="0.0278" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="bolt plan convert path/to/plan/myplan.yaml" name="test all bolt command examples.bolt plan.bolt plan convert path/to/plan/myplan.yaml" time="0.0256" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="bolt plan run canary --targets target1,target2 command=hostname" name="test all bolt command examples.bolt plan.bolt plan run canary --targets target1,target2 command=hostname" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="bolt plan run canary --targets target1,target2 command=hostname" name="test all bolt command examples.bolt plan.bolt plan run canary --targets target1,target2 command=hostname" time="0.1047" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 80
Actual length:   82
Strings differ at index 56.
Expected: '...rams '{"co...'
But was:  '...rams {\"co...'
at $result | Should -Be "bolt plan run canary --targets target1,target2 --params '{`"command`":`"hostname`"}'", /home/mcdonaldseanp/Workspace/orchestration/bolt/pwsh_module/command.tests.ps1:194</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /home/mcdonaldseanp/Workspace/orchestration/bolt/pwsh_module/command.tests.ps1:194</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="bolt plan new myproject::myplan" name="test all bolt command examples.bolt plan.bolt plan new myproject::myplan" time="0.0272" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="test all bolt command examples.bolt plan" executed="True" result="Success" success="True" time="0.7324" asserts="0" description="test all bolt command examples.bolt plan">
                <results>
                  <test-case description="bolt plan show" name="test all bolt command examples.bolt plan.bolt plan show" time="0.0247" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="test all bolt command examples.bolt project" executed="True" result="Success" success="True" time="0.8428" asserts="0" description="test all bolt command examples.bolt project">
                <results>
                  <test-case description="bolt project migrate" name="test all bolt command examples.bolt project.bolt project migrate" time="0.0216" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="bolt project init" name="test all bolt command examples.bolt project.bolt project init" time="0.0263" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="bolt project init myproject" name="test all bolt command examples.bolt project.bolt project init myproject" time="0.0227" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="bolt project init --modules puppetlabs-apt,puppetlabs-ntp" name="test all bolt command examples.bolt project.bolt project init --modules puppetlabs-apt,puppetlabs-ntp" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="test all bolt command examples.bolt module" executed="True" result="Success" success="True" time="0.9437" asserts="0" description="test all bolt command examples.bolt module">
                <results>
                  <test-case description="bolt module add" name="test all bolt command examples.bolt module.bolt module add" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="bolt module generate-types" name="test all bolt command examples.bolt module.bolt module generate-types" time="0.0202" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="bolt module install" name="test all bolt command examples.bolt module.bolt module install" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="bolt module show" name="test all bolt command examples.bolt module.bolt module show" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="test all bolt command examples.bolt script" executed="True" result="Success" success="True" time="0.9862" asserts="0" description="test all bolt command examples.bolt script">
                <results>
                  <test-case description="bolt script run myscript.sh 'echo hello' --targets target1,target2" name="test all bolt command examples.bolt script.bolt script run myscript.sh 'echo hello' --targets target1,target2" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="test all bolt command examples.bolt secret" executed="True" result="Success" success="True" time="1.0401" asserts="0" description="test all bolt command examples.bolt secret">
                <results>
                  <test-case description="bolt secret decrypt ciphertext" name="test all bolt command examples.bolt secret.bolt secret decrypt ciphertext" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="bolt secret encrypt plaintext" name="test all bolt command examples.bolt secret.bolt secret encrypt plaintext" time="0.0192" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="test all bolt command examples.bolt task" executed="True" result="Failure" success="False" time="1.1543" asserts="0" description="test all bolt command examples.bolt task">
                <results>
                  <test-case description="bolt task run package --targets target1,target2 action=status name=bash" name="test all bolt command examples.bolt task.bolt task run package --targets target1,target2 action=status name=bash" time="0.0673" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected collection @('bolt task run package --targets target1,target2 --params '{"name":"bash","action":"status"}'', 'bolt task run package --targets target1,target2 --params '{"action":"status","name":"bash"}'') to contain 'bolt task run package --targets target1,target2 --params {\"action\":\"status\",\"name\":\"bash\"}', but it was not found.
at $results | Should -BeIn @("bolt task run package --targets target1,target2 --params '{`"name`":`"bash`",`"action`":`"status`"}'",, /home/mcdonaldseanp/Workspace/orchestration/bolt/pwsh_module/command.tests.ps1:279</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /home/mcdonaldseanp/Workspace/orchestration/bolt/pwsh_module/command.tests.ps1:279</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="bolt task show" name="test all bolt command examples.bolt task.bolt task show" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="bolt task show canary" name="test all bolt command examples.bolt task.bolt task show canary" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>