# frozen_string_literal: true

##############################################################
## DO NOT EDIT THIS FILE                                    ##
## Use /etc/puppetlabs/bolt-server/conf.d/bolt-server.conf  ##
## to configure the sinatra server                          ##
##############################################################

require 'bolt_ext/server'
require 'bolt_ext/server-config'
require 'rack/handler/puma'

# rubocop:disable Style/ConditionalAssignment
if ENV['RACK_ENV'] == 'test'
  config = TransportConfig.new(File.join(__FILE__, 'spec', 'fixtures', 'configs', 'emptyconfig'))
else
  config = TransportConfig.new
end
# rubocop:enable Style/ConditionalAssignment

configure do
  # This is where a series of 'if' statements will go
  # Port is special: https://schneems.com/2017/03/13/puma-ports-and-polish/
  # so gets set in the handler
  #
  # if config.key
  #     set key, config.key
  # end
end

host = "0.0.0.0"
bind_addr = "ssl://#{host}?"
bind_addr << "cert=#{config.ssl_cert}"
bind_addr << "&key=#{config.ssl_key}"
bind_addr << "&ca=#{config.ssl_ca_cert}"
bind_addr << "&verify_mode=force_peer"

# This doesn't seem ideal, but it behaves well. I couldn't figure out how to get Puma or Rack to do
# it for me. An alternative might be rewriting this to use 'puma -C config.rb'.
Process.daemon
Rack::Handler::Puma.run(TransportAPI,
                        pidfile: '/var/run/puppetlabs/bolt-server/bolt-server.pid',
                        Port: config.port,
                        Host: bind_addr)
